<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1103.2343                               -->
<workbook source-build='10.1.1 (10100.16.1103.2343)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='master (medicare.master) (medicare)' inline='true' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='54.164.115.109' name='hadoophive.1q9f8c01g88bng15qjhl50pbfpaz'>
            <connection authentication='yes' authentication-type='2' class='hadoophive' connection-type='2' dbname='' odbc-connect-string-extras='' one-time-sql='' port='10000' schema='medicare' server='54.164.115.109' sslcert='' sslmode='' tablename='' username='root'>
              <connection-customization class='hadoophive' enabled='false' version='10.1'>
                <vendor name='hadoophive' />
                <driver name='hadoophive' />
                <customizations>
                  <customization name='CAP_AUTH_DB_IMPERSONATE' value='yes' />
                  <customization name='CAP_AUTH_KERBEROS_IMPERSONATE' value='yes' />
                  <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
                  <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
                  <customization name='CAP_FAST_METADATA' value='no' />
                  <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='no' />
                  <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
                  <customization name='CAP_INSERT_TEMP_EXEC_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
                  <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
                  <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='no' />
                  <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
                  <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
                  <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
                  <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
                  <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
                  <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
                  <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='no' />
                  <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
                  <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
                  <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
                  <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
                  <customization name='CAP_ODBC_UNBIND_EACH' value='no' />
                  <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
                  <customization name='CAP_QUERY_ALWAYS_USE_AQ_CACHE' value='no' />
                  <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
                  <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
                  <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='no' />
                  <customization name='CAP_QUERY_EMPTY_DOMAIN_TOP' value='no' />
                  <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='no' />
                  <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
                  <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
                  <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='no' />
                  <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
                  <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
                  <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='no' />
                  <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
                  <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
                  <customization name='CAP_QUERY_SORT_BY' value='yes' />
                  <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
                  <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
                  <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
                  <customization name='CAP_QUERY_SUPPRESS_CHECK_DOMAIN_LITERALS_THRESHOLD' value='no' />
                  <customization name='CAP_QUERY_SUPPRESS_NULL_CHECK_QUERIES' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
                  <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
                  <customization name='CAP_QUERY_TOP_N' value='yes' />
                  <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='yes' />
                  <customization name='CAP_QUERY_USE_QUERY_FUSION' value='yes' />
                  <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
                  <customization name='CAP_SELECT_INTO' value='no' />
                  <customization name='CAP_SELECT_TOP_INTO' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
                  <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
                  <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
                  <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
                  <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
                </customizations>
              </connection-customization>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='hadoophive.1q9f8c01g88bng15qjhl50pbfpaz' name='master' table='[medicare].[master]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>providerid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[providerid]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>providerid</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hospitalname]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>hospitalname</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitaloverallrating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hospitaloverallrating]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>hospitaloverallrating</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mortalitynationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mortalitynationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>mortalitynationalcomparison</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>safetyofcarenationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[safetyofcarenationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>safetyofcarenationalcomparison</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>readmissionnationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[readmissionnationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>readmissionnationalcomparison</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>patientexperiencenationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[patientexperiencenationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>patientexperiencenationalcomparison</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>effectivenessofcarenationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[effectivenessofcarenationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>effectivenessofcarenationalcomparison</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timelinessofcarenationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timelinessofcarenationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>timelinessofcarenationalcomparison</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>efficientuseofmedicalimagingnationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[efficientuseofmedicalimagingnationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>efficientuseofmedicalimagingnationalcomparison</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>averageeffectivecarescore</remote-name>
            <remote-type>129</remote-type>
            <local-name>[averageeffectivecarescore]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>averageeffectivecarescore</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>averagereadmissionscore</remote-name>
            <remote-type>129</remote-type>
            <local-name>[averagereadmissionscore]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>averagereadmissionscore</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mortalitycomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mortalitycomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>mortalitycomp</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>safetyofcarecomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[safetyofcarecomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>safetyofcarecomp</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>readmissioncomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[readmissioncomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>readmissioncomp</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>patientexperiencecomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[patientexperiencecomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>patientexperiencecomp</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>effectivenessofcarecomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[effectivenessofcarecomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>effectivenessofcarecomp</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timelinessofcarecomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timelinessofcarecomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>timelinessofcarecomp</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>efficientuseofmedicalimagingcomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[efficientuseofmedicalimagingcomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>efficientuseofmedicalimagingcomp</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>safetygrade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[safetygrade]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>safetygrade</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yelprating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[yelprating]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>yelprating</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>safetygradenumeric</remote-name>
            <remote-type>129</remote-type>
            <local-name>[safetygradenumeric]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>safetygradenumeric</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Comparison' datatype='real' name='[Calculation_872572449718501401]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL([mortalitycomp],0)+&#13;&#10;IFNULL([safetyofcarecomp],0)+&#13;&#10;IFNULL([readmissioncomp],0)+&#13;&#10;IFNULL([patientexperiencecomp],0)+&#13;&#10;IFNULL([effectivenessofcarecomp],0)+&#13;&#10;IFNULL([efficientuseofmedicalimagingcomp],0)+&#13;&#10;IFNULL([timelinessofcarecomp],0 )+&#13;&#10;IFNULL([safetyofcarecomp],0)' />
      </column>
      <column caption='Meta Score' datatype='real' name='[Calculation_872572449719549979]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_872572449718501401] +&#13;&#10;IFNULL([yelprating],0) +&#13;&#10;IFNULl([safetygradenumeric],0) +&#13;&#10;IFNULL([hospitaloverallrating],0)' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='Averageeffectivecarescore' datatype='real' datatype-customized='true' name='[averageeffectivecarescore]' role='measure' type='quantitative' />
      <column caption='Averagereadmissionscore' datatype='real' datatype-customized='true' name='[averagereadmissionscore]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='real' datatype-customized='true' name='[effectivenessofcarecomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Effectivenessofcarenationalcomparison' datatype='string' name='[effectivenessofcarenationalcomparison]' role='dimension' type='nominal' />
      <column datatype='integer' datatype-customized='true' name='[efficientuseofmedicalimagingcomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Efficientuseofmedicalimagingnationalcomparison' datatype='string' name='[efficientuseofmedicalimagingnationalcomparison]' role='dimension' type='nominal' />
      <column caption='Hospitalname' datatype='string' name='[hospitalname]' role='dimension' type='nominal' />
      <column caption='Hospitaloverallrating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
      <column datatype='real' datatype-customized='true' name='[mortalitycomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Mortalitynationalcomparison' datatype='string' datatype-customized='true' name='[mortalitynationalcomparison]' role='dimension' type='nominal' />
      <column datatype='real' datatype-customized='true' name='[patientexperiencecomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Patientexperiencenationalcomparison' datatype='string' name='[patientexperiencenationalcomparison]' role='dimension' type='nominal' />
      <column caption='Providerid' datatype='string' name='[providerid]' role='dimension' type='nominal' />
      <column datatype='real' datatype-customized='true' name='[readmissioncomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Readmissionnationalcomparison' datatype='string' name='[readmissionnationalcomparison]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Safetygrade' datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[safetygrade]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[safetygradenumeric]' role='measure' type='quantitative' />
      <column datatype='integer' datatype-customized='true' name='[safetyofcarecomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Safetyofcarenationalcomparison' datatype='string' name='[safetyofcarenationalcomparison]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='real' datatype-customized='true' name='[timelinessofcarecomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Timelinessofcarenationalcomparison' datatype='string' name='[timelinessofcarenationalcomparison]' role='dimension' type='nominal' />
      <column caption='Yelprating' datatype='real' datatype-customized='true' name='[yelprating]' role='measure' type='quantitative' />
      <column caption='Zipcode' datatype='string' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column-instance column='[hospitaloverallrating]' derivation='Avg' name='[avg:hospitaloverallrating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[hospitaloverallrating]' derivation='Avg' name='[avg:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospitaloverallrating]' derivation='Count' name='[cnt:hospitaloverallrating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[hospitaloverallrating]' derivation='Count' name='[cnt:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospitaloverallrating]' derivation='CountD' name='[ctd:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospitaloverallrating]' derivation='Max' name='[max:hospitaloverallrating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[hospitaloverallrating]' derivation='Max' name='[max:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospitaloverallrating]' derivation='Median' name='[med:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[hospitaloverallrating]' derivation='Sum' name='[sum:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Ashton Chevallier\Documents\My Tableau Repository\Datasources\master (medicare.master) (medicare).tde' schema='Extract' tablename='Extract' update-time='12/15/2016 03:23:19 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4281' timestamp-start='2016-12-15 03:23:19.355' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4281.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4281.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[address]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>address</remote-alias>
              <ordinal>1</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4255</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; CALLE CONCEPCION VERA AYALA \#550 S&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WHITEHORSE PIKE AND TOWNSEND AVENUE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>averageeffectivecarescore</remote-name>
              <remote-type>5</remote-type>
              <local-name>[averageeffectivecarescore]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>averageeffectivecarescore</remote-alias>
              <ordinal>2</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2935</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>364490.28176018404</statistic>
                <statistic aggregation='Avg' datatype='real'>85.141387937440797</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>200.08333333333331</statistic>
                <statistic aggregation='Stdev' datatype='real'>15.043252851635604</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.041495770177571</statistic>
                <statistic aggregation='Var' datatype='real'>226.29945635824271</statistic>
                <statistic aggregation='VarP' datatype='real'>226.24659500426975</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>32001770.151984207</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>averagereadmissionscore</remote-name>
              <remote-type>5</remote-type>
              <local-name>[averagereadmissionscore]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>averagereadmissionscore</remote-alias>
              <ordinal>3</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2020</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>62725.122049339538</statistic>
                <statistic aggregation='Avg' datatype='real'>14.651978988399799</statistic>
                <statistic aggregation='Min' datatype='real'>4.2999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>19.450000000000006</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.4259232387886855</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.4257566881557762</statistic>
                <statistic aggregation='Var' datatype='real'>2.0332570829176144</statistic>
                <statistic aggregation='VarP' datatype='real'>2.0327821338209273</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>927749.51062662317</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>4</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2684</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABBEVILLE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZUNI&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>effectivenessofcarecomp</remote-name>
              <remote-type>4</remote-type>
              <local-name>[effectivenessofcarecomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>effectivenessofcarecomp</remote-alias>
              <ordinal>5</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>498.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.13632630714481248</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.62533879077071086</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.62525319241417121</statistic>
                <statistic aggregation='Var' datatype='real'>0.39104860324257484</statistic>
                <statistic aggregation='VarP' datatype='real'>0.39094155462411262</statistic>
                <statistic aggregation='Count' datatype='integer'>3653</statistic>
                <statistic aggregation='Median' datatype='real'>0.0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1496.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>effectivenessofcarenationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[effectivenessofcarenationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>effectivenessofcarenationalcomparison</remote-alias>
              <ordinal>6</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>efficientuseofmedicalimagingcomp</remote-name>
              <remote-type>16</remote-type>
              <local-name>[efficientuseofmedicalimagingcomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>efficientuseofmedicalimagingcomp</remote-alias>
              <ordinal>7</ordinal>
              <family>master</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-14.0</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.0050323508267433505</statistic>
                <statistic aggregation='Min' datatype='integer'>-1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.51301982156690729</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.51292760986101871</statistic>
                <statistic aggregation='Var' datatype='real'>0.26318933732054139</statistic>
                <statistic aggregation='VarP' datatype='real'>0.26309473295773744</statistic>
                <statistic aggregation='Count' datatype='integer'>2782</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>732.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>efficientuseofmedicalimagingnationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[efficientuseofmedicalimagingnationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>efficientuseofmedicalimagingnationalcomparison</remote-alias>
              <ordinal>8</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hospitalname</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hospitalname]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hospitalname</remote-alias>
              <ordinal>9</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4109</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABBEVILLE AREA MEDICAL CENTER&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZUNI COMPREHENSIVE COMMUNITY HEALTH CENTER&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hospitaloverallrating</remote-name>
              <remote-type>16</remote-type>
              <local-name>[hospitaloverallrating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hospitaloverallrating</remote-alias>
              <ordinal>10</ordinal>
              <family>master</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11160.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.0718414533443434</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.83531783576690743</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.83520286531205601</statistic>
                <statistic aggregation='Var' datatype='real'>0.69775588675031008</statistic>
                <statistic aggregation='VarP' datatype='real'>0.69756382622546831</statistic>
                <statistic aggregation='Count' datatype='integer'>3633</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>36816.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mortalitycomp</remote-name>
              <remote-type>4</remote-type>
              <local-name>[mortalitycomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mortalitycomp</remote-alias>
              <ordinal>11</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>59.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.017106407654392579</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.46451541560075249</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.46444807012513928</statistic>
                <statistic aggregation='Var' datatype='real'>0.2157745713307398</statistic>
                <statistic aggregation='VarP' datatype='real'>0.21571200984296632</statistic>
                <statistic aggregation='Count' datatype='integer'>3449</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>745.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mortalitynationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[mortalitynationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mortalitynationalcomparison</remote-alias>
              <ordinal>12</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>patientexperiencecomp</remote-name>
              <remote-type>4</remote-type>
              <local-name>[patientexperiencecomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>patientexperiencecomp</remote-alias>
              <ordinal>13</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>88.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.025581395348837209</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.81490706252983647</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.81478860812663356</statistic>
                <statistic aggregation='Var' datatype='real'>0.66407352056100677</statistic>
                <statistic aggregation='VarP' datatype='real'>0.66388047593293675</statistic>
                <statistic aggregation='Count' datatype='integer'>3440</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2286.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>patientexperiencenationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[patientexperiencenationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>patientexperiencenationalcomparison</remote-alias>
              <ordinal>14</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>providerid</remote-name>
              <remote-type>129</remote-type>
              <local-name>[providerid]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>providerid</remote-alias>
              <ordinal>15</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4281</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;100001&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;90011&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>readmissioncomp</remote-name>
              <remote-type>4</remote-type>
              <local-name>[readmissioncomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>readmissioncomp</remote-alias>
              <ordinal>16</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-58.0</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.015437849347883949</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.66861495227301126</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.66852596379158002</statistic>
                <statistic aggregation='Var' datatype='real'>0.44704595440304118</statistic>
                <statistic aggregation='VarP' datatype='real'>0.44692696426346096</statistic>
                <statistic aggregation='Count' datatype='integer'>3757</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1680.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>readmissionnationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[readmissionnationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>readmissionnationalcomparison</remote-alias>
              <ordinal>17</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>safetygrade</remote-name>
              <remote-type>129</remote-type>
              <local-name>[safetygrade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>safetygrade</remote-alias>
              <ordinal>18</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;F&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>safetygradenumeric</remote-name>
              <remote-type>16</remote-type>
              <local-name>[safetygradenumeric]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>safetygradenumeric</remote-alias>
              <ordinal>19</ordinal>
              <family>master</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7303.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.837624802942722</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.97141751015048738</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.97116224342419055</statistic>
                <statistic aggregation='Var' datatype='real'>0.94365197902697218</statistic>
                <statistic aggregation='VarP' datatype='real'>0.94315610305270681</statistic>
                <statistic aggregation='Count' datatype='integer'>1903</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>29821.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>safetyofcarecomp</remote-name>
              <remote-type>16</remote-type>
              <local-name>[safetyofcarecomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>safetyofcarecomp</remote-alias>
              <ordinal>20</ordinal>
              <family>master</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>132.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.045454545454545456</statistic>
                <statistic aggregation='Min' datatype='integer'>-1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.71208262185743632</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.71196000754368061</statistic>
                <statistic aggregation='Var' datatype='real'>0.50706166035136069</statistic>
                <statistic aggregation='VarP' datatype='real'>0.50688705234159781</statistic>
                <statistic aggregation='Count' datatype='integer'>2904</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1478.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>safetyofcarenationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[safetyofcarenationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>safetyofcarenationalcomparison</remote-alias>
              <ordinal>21</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>22</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timelinessofcarecomp</remote-name>
              <remote-type>4</remote-type>
              <local-name>[timelinessofcarecomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timelinessofcarecomp</remote-alias>
              <ordinal>23</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>186.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.053913043478260869</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.75805755300736344</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.75794768163161319</statistic>
                <statistic aggregation='Var' datatype='real'>0.5746512536715116</statistic>
                <statistic aggregation='VarP' datatype='real'>0.57448468809073727</statistic>
                <statistic aggregation='Count' datatype='integer'>3450</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1992.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timelinessofcarenationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[timelinessofcarenationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timelinessofcarenationalcomparison</remote-alias>
              <ordinal>24</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>yelprating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[yelprating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>yelprating</remote-alias>
              <ordinal>25</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>92.916666666666657</statistic>
                <statistic aggregation='Avg' datatype='real'>2.903645833333333</statistic>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>5.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.83201761051763257</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.81891415206654139</statistic>
                <statistic aggregation='Var' datatype='real'>0.69225330421147091</statistic>
                <statistic aggregation='VarP' datatype='real'>0.67062038845486249</statistic>
                <statistic aggregation='Count' datatype='integer'>32</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>291.25694444444446</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>zipcode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[zipcode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>zipcode</remote-alias>
              <ordinal>26</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3994</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10003&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99901&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.321429' measure-ordering='alphabetic' measure-percentage='0.678571' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:hospitaloverallrating:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[ctd:hospitaloverallrating:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:hospitaloverallrating:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[med:hospitaloverallrating:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:Calculation_872572449716809736:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:Calculation_872572449716928521:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449717080074:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:hospitaloverallrating:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[cnt:hospitaloverallrating:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:hospitaloverallrating:ok]' type='palette'>
            <map to='#499894'>
              <bucket>12</bucket>
            </map>
            <map to='#499894'>
              <bucket>67</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>50</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>142</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>57</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>170</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>15</bucket>
            </map>
            <map to='#79706e'>
              <bucket>84</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>13</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>77</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>7</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>60</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>277</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>28</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>39</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>110</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>51</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>154</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>25</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>30</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>97</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>9</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>62</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>301</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>17</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>85</bucket>
            </map>
            <map to='#d37295'>
              <bucket>21</bucket>
            </map>
            <map to='#d37295'>
              <bucket>86</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>26</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>31</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>109</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>48</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>111</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>79</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>64</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>54</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>155</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>24</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>95</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>14</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>83</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>55</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>161</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:hospitaloverallrating:ok]' palette='red_gold_10_0' type='palette'>
            <map to='#499894'>
              <bucket>12</bucket>
            </map>
            <map to='#499894'>
              <bucket>67</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>50</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>142</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>57</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>170</bucket>
            </map>
            <map to='#79706e'>
              <bucket>15</bucket>
            </map>
            <map to='#79706e'>
              <bucket>84</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>13</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>77</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>7</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>60</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>277</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>28</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>39</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>110</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>51</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>154</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>25</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>30</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>97</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>9</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>62</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>301</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>17</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>85</bucket>
            </map>
            <map to='#cf4244'>
              <bucket>4</bucket>
            </map>
            <map to='#d37295'>
              <bucket>21</bucket>
            </map>
            <map to='#d37295'>
              <bucket>86</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>26</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>31</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>109</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>48</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>111</bucket>
            </map>
            <map to='#e15759'>
              <bucket>79</bucket>
            </map>
            <map to='#eb6e49'>
              <bucket>5</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>64</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>54</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>155</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f9aa51'>
              <bucket>1</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>24</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>95</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>14</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>83</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>55</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>161</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[avg:hospitaloverallrating:ok]' palette='red_gold_10_0' type='palette'>
            <map to='#499894'>
              <bucket>12.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>67.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>50.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>142.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>57.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>170.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>15.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>84.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>13.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>77.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>7.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>60.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>277.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>28.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>39.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>110.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>51.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>154.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>25.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>30.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>97.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>9.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>62.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>301.0</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>4.0588235294117645</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>4.5</bucket>
            </map>
            <map to='#b9213e'>
              <bucket>3.6666666666666665</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>17.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>85.0</bucket>
            </map>
            <map to='#bc253f'>
              <bucket>3.6636363636363636</bucket>
            </map>
            <map to='#bd273f'>
              <bucket>4.25</bucket>
            </map>
            <map to='#bf2a3f'>
              <bucket>3.518987341772152</bucket>
            </map>
            <map to='#c22e40'>
              <bucket>3.5090909090909093</bucket>
            </map>
            <map to='#c43141'>
              <bucket>4.0</bucket>
            </map>
            <map to='#c43241'>
              <bucket>3.5</bucket>
            </map>
            <map to='#c73641'>
              <bucket>3.4705882352941178</bucket>
            </map>
            <map to='#c93942'>
              <bucket>3.4615384615384617</bucket>
            </map>
            <map to='#ca3a42'>
              <bucket>3.75</bucket>
            </map>
            <map to='#cc3d43'>
              <bucket>3.4333333333333331</bucket>
            </map>
            <map to='#ce4143'>
              <bucket>3.4193548387096775</bucket>
            </map>
            <map to='#d14444'>
              <bucket>3.415492957746479</bucket>
            </map>
            <map to='#d34845'>
              <bucket>3.3880597014925371</bucket>
            </map>
            <map to='#d37295'>
              <bucket>21.0</bucket>
            </map>
            <map to='#d37295'>
              <bucket>86.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>26.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>31.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>109.0</bucket>
            </map>
            <map to='#d64b45'>
              <bucket>3.375</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>48.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>111.0</bucket>
            </map>
            <map to='#d84f46'>
              <bucket>3.3541666666666665</bucket>
            </map>
            <map to='#db5247'>
              <bucket>3.3076923076923075</bucket>
            </map>
            <map to='#dc5447'>
              <bucket>3.3333333333333335</bucket>
            </map>
            <map to='#dd5647'>
              <bucket>3.2996389891696749</bucket>
            </map>
            <map to='#df5947'>
              <bucket>3.2727272727272729</bucket>
            </map>
            <map to='#e15759'>
              <bucket>79.0</bucket>
            </map>
            <map to='#e15c48'>
              <bucket>3.25</bucket>
            </map>
            <map to='#e15d48'>
              <bucket>3.1754385964912282</bucket>
            </map>
            <map to='#e46048'>
              <bucket>3.1666666666666665</bucket>
            </map>
            <map to='#e66449'>
              <bucket>3.1443298969072164</bucket>
            </map>
            <map to='#e86749'>
              <bucket>3.1351351351351351</bucket>
            </map>
            <map to='#ea6b49'>
              <bucket>3.1333333333333333</bucket>
            </map>
            <map to='#eb6e49'>
              <bucket>5.0</bucket>
            </map>
            <map to='#ec6f49'>
              <bucket>3.1200000000000001</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>3.1176470588235294</bucket>
            </map>
            <map to='#ef764a'>
              <bucket>3.1055900621118013</bucket>
            </map>
            <map to='#f0774a'>
              <bucket>2.75</bucket>
            </map>
            <map to='#f1794a'>
              <bucket>3.0833333333333335</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>64.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>54.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>155.0</bucket>
            </map>
            <map to='#f37d4a'>
              <bucket>3.0465116279069768</bucket>
            </map>
            <map to='#f47f4a'>
              <bucket>2.6666666666666665</bucket>
            </map>
            <map to='#f4804a'>
              <bucket>3.037974683544304</bucket>
            </map>
            <map to='#f4c860'>
              <bucket>2.2903225806451615</bucket>
            </map>
            <map to='#f4cc63'>
              <bucket>2.0</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1.4285714285714286</bucket>
            </map>
            <map to='#f5c05a'>
              <bucket>2.53125</bucket>
            </map>
            <map to='#f5c45d'>
              <bucket>2.3199999999999998</bucket>
            </map>
            <map to='#f5c75f'>
              <bucket>1.0</bucket>
            </map>
            <map to='#f6844b'>
              <bucket>3.0324675324675323</bucket>
            </map>
            <map to='#f6b756'>
              <bucket>2.6785714285714284</bucket>
            </map>
            <map to='#f6bc58'>
              <bucket>1.3333333333333333</bucket>
            </map>
            <map to='#f6bc58'>
              <bucket>2.664705882352941</bucket>
            </map>
            <map to='#f7884b'>
              <bucket>3.0240963855421685</bucket>
            </map>
            <map to='#f7894b'>
              <bucket>2.5</bucket>
            </map>
            <map to='#f7b254'>
              <bucket>1.5</bucket>
            </map>
            <map to='#f7b354'>
              <bucket>2.693548387096774</bucket>
            </map>
            <map to='#f8aa51'>
              <bucket>2.7818181818181817</bucket>
            </map>
            <map to='#f8af53'>
              <bucket>2.7333333333333334</bucket>
            </map>
            <map to='#f98c4c'>
              <bucket>3.0129870129870131</bucket>
            </map>
            <map to='#f9a650'>
              <bucket>2.7948717948717947</bucket>
            </map>
            <map to='#f9a750'>
              <bucket>1.6666666666666667</bucket>
            </map>
            <map to='#fa914d'>
              <bucket>3.0</bucket>
            </map>
            <map to='#fa9d4f'>
              <bucket>2.8888888888888888</bucket>
            </map>
            <map to='#faa24f'>
              <bucket>2.8631578947368421</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>24.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>95.0</bucket>
            </map>
            <map to='#fb934d'>
              <bucket>2.3333333333333335</bucket>
            </map>
            <map to='#fb954d'>
              <bucket>2.9357798165137616</bucket>
            </map>
            <map to='#fb994e'>
              <bucket>2.8936877076411962</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>14.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>83.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>55.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>161.0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='providerid' />
        <field-sort-custom-order field='hospitalname' />
        <field-sort-custom-order field='address' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='zipcode' />
        <field-sort-custom-order field='hospitaloverallrating' />
        <field-sort-custom-order field='mortalitynationalcomparison' />
        <field-sort-custom-order field='safetyofcarenationalcomparison' />
        <field-sort-custom-order field='readmissionnationalcomparison' />
        <field-sort-custom-order field='patientexperiencenationalcomparison' />
        <field-sort-custom-order field='effectivenessofcarenationalcomparison' />
        <field-sort-custom-order field='timelinessofcarenationalcomparison' />
        <field-sort-custom-order field='efficientuseofmedicalimagingnationalcomparison' />
        <field-sort-custom-order field='averageeffectivecarescore' />
        <field-sort-custom-order field='averagereadmissionscore' />
        <field-sort-custom-order field='mortalitycomp' />
        <field-sort-custom-order field='safetyofcarecomp' />
        <field-sort-custom-order field='readmissioncomp' />
        <field-sort-custom-order field='patientexperiencecomp' />
        <field-sort-custom-order field='effectivenessofcarecomp' />
        <field-sort-custom-order field='timelinessofcarecomp' />
        <field-sort-custom-order field='efficientuseofmedicalimagingcomp' />
        <field-sort-custom-order field='safetygrade' />
        <field-sort-custom-order field='yelprating' />
        <field-sort-custom-order field='safetygradenumeric' />
        <field-sort-custom-order field='Calculation_872572449718501401' />
        <field-sort-custom-order field='Calculation_872572449719549979' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='3 Ratings by Geography'>
      <table>
        <view>
          <datasources>
            <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Hospitalname' datatype='string' name='[hospitalname]' role='dimension' type='nominal' />
            <column caption='Hospitaloverallrating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[hospitalname]' derivation='None' name='[none:hospitalname:nk]' pivot='key' type='nominal' />
            <column-instance column='[hospitaloverallrating]' derivation='None' name='[none:hospitaloverallrating:ok]' pivot='key' type='ordinal' />
            <column-instance column='[safetygrade]' derivation='None' name='[none:safetygrade:nk]' pivot='key' type='nominal' />
            <column-instance column='[yelprating]' derivation='None' name='[none:yelprating:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' caption='Safetygrade' datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[safetygrade]' role='dimension' type='nominal' />
            <column caption='Yelprating' datatype='real' datatype-customized='true' name='[yelprating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Longitude (generated)]' field-type='quantitative' max='-11987066.254618086' min='-14320508.826650431' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Latitude (generated)]' field-type='quantitative' max='5183485.6988155227' min='3970925.8448535702' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitalname:nk]' />
              <size column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:yelprating:ok]' />
              <text column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitaloverallrating:ok]' />
              <text column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:city:nk]' />
              <lod column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:safetygrade:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Latitude (generated)]</rows>
        <cols>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Average Hospital Score Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
            <column-instance column='[hospitaloverallrating]' derivation='Avg' name='[avg:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
            <column caption='Hospitaloverallrating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Longitude (generated)]' field-type='quantitative' max='34361782.685637429' min='24900917.377615128' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Latitude (generated)]' field-type='quantitative' max='7559148.7805714589' min='-274540.67594823404' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:hospitaloverallrating:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]' />
              <color column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:hospitaloverallrating:qk]' />
              <geometry column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Latitude (generated)]</rows>
        <cols>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='MetaScore Detail'>
      <table>
        <view>
          <datasources>
            <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
          </datasources>
          <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
            <column caption='Total Comparison' datatype='real' name='[Calculation_872572449718501401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([mortalitycomp],0)+&#13;&#10;IFNULL([safetyofcarecomp],0)+&#13;&#10;IFNULL([readmissioncomp],0)+&#13;&#10;IFNULL([patientexperiencecomp],0)+&#13;&#10;IFNULL([effectivenessofcarecomp],0)+&#13;&#10;IFNULL([efficientuseofmedicalimagingcomp],0)+&#13;&#10;IFNULL([timelinessofcarecomp],0 )+&#13;&#10;IFNULL([safetyofcarecomp],0)' />
            </column>
            <column caption='Meta Score' datatype='real' name='[Calculation_872572449719549979]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_872572449718501401] +&#13;&#10;IFNULL([yelprating],0) +&#13;&#10;IFNULl([safetygradenumeric],0) +&#13;&#10;IFNULL([hospitaloverallrating],0)' />
            </column>
            <column-instance column='[safetygradenumeric]' derivation='CountD' name='[ctd:safetygradenumeric:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[effectivenessofcarecomp]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[efficientuseofmedicalimagingcomp]' role='measure' type='quantitative' />
            <column caption='Hospitalname' datatype='string' name='[hospitalname]' role='dimension' type='nominal' />
            <column caption='Hospitaloverallrating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_872572449719549979]' derivation='Max' name='[max:Calculation_872572449719549979:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hospitaloverallrating]' derivation='Max' name='[max:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[mortalitycomp]' role='measure' type='quantitative' />
            <column-instance column='[hospitalname]' derivation='None' name='[none:hospitalname:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[patientexperiencecomp]' role='measure' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[readmissioncomp]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[safetygradenumeric]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[safetyofcarecomp]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_872572449718501401]' derivation='Sum' name='[sum:Calculation_872572449718501401:qk]' pivot='key' type='quantitative' />
            <column-instance column='[yelprating]' derivation='Sum' name='[sum:yelprating:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[timelinessofcarecomp]' role='measure' type='quantitative' />
            <column caption='Yelprating' datatype='real' datatype-customized='true' name='[yelprating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:hospitaloverallrating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:yelprating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[ctd:safetygradenumeric:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449718501401:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449719549979:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:hospitaloverallrating:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:yelprating:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[ctd:safetygradenumeric:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449718501401:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449719549979:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]</column>
            <column>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]' value='128' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449719549979:qk]' />
              <text column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitalname:nk]</rows>
        <cols>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='MetaScore by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
            <column caption='Total Comparison' datatype='real' name='[Calculation_872572449718501401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([mortalitycomp],0)+&#13;&#10;IFNULL([safetyofcarecomp],0)+&#13;&#10;IFNULL([readmissioncomp],0)+&#13;&#10;IFNULL([patientexperiencecomp],0)+&#13;&#10;IFNULL([effectivenessofcarecomp],0)+&#13;&#10;IFNULL([efficientuseofmedicalimagingcomp],0)+&#13;&#10;IFNULL([timelinessofcarecomp],0 )+&#13;&#10;IFNULL([safetyofcarecomp],0)' />
            </column>
            <column caption='Meta Score' datatype='real' name='[Calculation_872572449719549979]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_872572449718501401] +&#13;&#10;IFNULL([yelprating],0) +&#13;&#10;IFNULl([safetygradenumeric],0) +&#13;&#10;IFNULL([hospitaloverallrating],0)' />
            </column>
            <column-instance column='[Calculation_872572449719549979]' derivation='Avg' name='[avg:Calculation_872572449719549979:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[effectivenessofcarecomp]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[efficientuseofmedicalimagingcomp]' role='measure' type='quantitative' />
            <column caption='Hospitaloverallrating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[mortalitycomp]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[patientexperiencecomp]' role='measure' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[readmissioncomp]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[safetygradenumeric]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[safetyofcarecomp]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[timelinessofcarecomp]' role='measure' type='quantitative' />
            <column caption='Yelprating' datatype='real' datatype-customized='true' name='[yelprating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Longitude (generated)]' field-type='quantitative' max='33202309.612694912' min='25978811.100488693' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Latitude (generated)]' field-type='quantitative' max='6930286.9404675262' min='2746120.4651751081' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='3.0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:Calculation_872572449719549979:qk]' min='-0.2857142857142857' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]' />
              <color column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:Calculation_872572449719549979:qk]' />
              <geometry column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Latitude (generated)]</rows>
        <cols>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Scores Detail'>
      <table>
        <view>
          <datasources>
            <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
          </datasources>
          <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
            <column caption='IFNULL([Hospitaloverallrating],0)' datatype='integer' name='[Calculation_872572449717080074]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([hospitaloverallrating],0)' />
            </column>
            <column caption='IFNULL([safetygradenumeric],0)' datatype='integer' name='[Calculation_872572449717186571]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([safetygradenumeric],0)' />
            </column>
            <column caption='IFNULL([Yelprating],0)' datatype='real' name='[Calculation_872572449717301261]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([yelprating],0)' />
            </column>
            <column caption='IFNULL([timelinessofcarecomp],0)' datatype='real' name='[Calculation_872572449717657615]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([timelinessofcarecomp],0)' />
            </column>
            <column caption='IFNULL([safetyofcarecomp],0)' datatype='integer' name='[Calculation_872572449717719056]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([safetyofcarecomp],0)' />
            </column>
            <column caption='IFNULL([readmissioncomp],0)' datatype='real' name='[Calculation_872572449717772305]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([readmissioncomp],0)' />
            </column>
            <column caption='IFNULL([patientexperiencecomp],0)' datatype='real' name='[Calculation_872572449717841938]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([patientexperiencecomp],0)' />
            </column>
            <column caption='IFNULL([efficientuseofmedicalimagingcomp],0)' datatype='integer' name='[Calculation_872572449717895187]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([efficientuseofmedicalimagingcomp],0)' />
            </column>
            <column caption='IFNULL([effectivenessofcarecomp],0)' datatype='real' name='[Calculation_872572449717956628]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([effectivenessofcarecomp],0)' />
            </column>
            <column caption='IFNULL([Averagereadmissionscore],0)' datatype='real' name='[Calculation_872572449718001685]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([averagereadmissionscore],0)' />
            </column>
            <column caption='IFNULL([Averageeffectivecarescore],0)' datatype='real' name='[Calculation_872572449718059030]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([averageeffectivecarescore],0)' />
            </column>
            <column caption='Total Comparison' datatype='real' name='[Calculation_872572449718501401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([mortalitycomp],0)+&#13;&#10;IFNULL([safetyofcarecomp],0)+&#13;&#10;IFNULL([readmissioncomp],0)+&#13;&#10;IFNULL([patientexperiencecomp],0)+&#13;&#10;IFNULL([effectivenessofcarecomp],0)+&#13;&#10;IFNULL([efficientuseofmedicalimagingcomp],0)+&#13;&#10;IFNULL([timelinessofcarecomp],0 )+&#13;&#10;IFNULL([safetyofcarecomp],0)' />
            </column>
            <column caption='Meta Score' datatype='real' name='[Calculation_872572449719549979]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_872572449718501401] +&#13;&#10;IFNULL([yelprating],0) +&#13;&#10;IFNULl([safetygradenumeric],0) +&#13;&#10;IFNULL([hospitaloverallrating],0)' />
            </column>
            <column caption='Averageeffectivecarescore' datatype='real' datatype-customized='true' name='[averageeffectivecarescore]' role='measure' type='quantitative' />
            <column caption='Averagereadmissionscore' datatype='real' datatype-customized='true' name='[averagereadmissionscore]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[effectivenessofcarecomp]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[efficientuseofmedicalimagingcomp]' role='measure' type='quantitative' />
            <column caption='Hospitalname' datatype='string' name='[hospitalname]' role='dimension' type='nominal' />
            <column caption='Hospitaloverallrating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_872572449717186571]' derivation='Max' name='[max:Calculation_872572449717186571:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717301261]' derivation='Max' name='[max:Calculation_872572449717301261:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717657615]' derivation='Max' name='[max:Calculation_872572449717657615:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717719056]' derivation='Max' name='[max:Calculation_872572449717719056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717772305]' derivation='Max' name='[max:Calculation_872572449717772305:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717841938]' derivation='Max' name='[max:Calculation_872572449717841938:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717895187]' derivation='Max' name='[max:Calculation_872572449717895187:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717956628]' derivation='Max' name='[max:Calculation_872572449717956628:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449718001685]' derivation='Max' name='[max:Calculation_872572449718001685:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449718059030]' derivation='Max' name='[max:Calculation_872572449718059030:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[mortalitycomp]' role='measure' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[hospitalname]' derivation='None' name='[none:hospitalname:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:nk]' pivot='key' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[patientexperiencecomp]' role='measure' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[readmissioncomp]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[safetygradenumeric]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[safetyofcarecomp]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_872572449717080074]' derivation='Sum' name='[sum:Calculation_872572449717080074:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449718501401]' derivation='Sum' name='[sum:Calculation_872572449718501401:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449719549979]' derivation='Sum' name='[sum:Calculation_872572449719549979:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[timelinessofcarecomp]' role='measure' type='quantitative' />
            <column caption='Yelprating' datatype='real' datatype-customized='true' name='[yelprating]' role='measure' type='quantitative' />
            <column caption='Zipcode' datatype='string' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449717080074:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717186571:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717301261:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717657615:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717719056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717772305:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717841938:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717895187:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717956628:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449718001685:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449718059030:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449718501401:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449719549979:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449717080074:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717186571:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717301261:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717657615:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717719056:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717772305:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717841938:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717895187:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717956628:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449718001685:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449718059030:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449718501401:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449719549979:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitalname:nk]' direction='ASC' using='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449719549979:qk]' />
          <filter class='categorical' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:zipcode:nk]'>
            <groupfilter function='level-members' level='[none:zipcode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]</column>
            <column>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]</column>
            <column>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:zipcode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk] / ([federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:city:nk] / [federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitalname:nk]))</rows>
        <cols>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Yelp Overall Correlation'>
      <table>
        <view>
          <datasources>
            <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
          </datasources>
          <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
            <column caption='Hospitaloverallrating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
            <column-instance column='[hospitaloverallrating]' derivation='None' name='[none:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[safetygrade]' derivation='None' name='[none:safetygrade:nk]' pivot='key' type='nominal' />
            <column-instance column='[yelprating]' derivation='None' name='[none:yelprating:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Safetygrade' datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[safetygrade]' role='dimension' type='nominal' />
            <column caption='Yelprating' datatype='real' datatype-customized='true' name='[yelprating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:yelprating:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:safetygrade:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:yelprating:qk]</rows>
        <cols>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitaloverallrating:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Details'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
      </datasources>
      <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='MetaScore Detail' w='84000' x='0' y='0' />
              <zone h='50000' id='7' name='MetaScore by State' w='42000' x='0' y='50000' />
              <zone h='50000' id='9' name='Average Hospital Score Map' w='42000' x='42000' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='81250' id='6' name='MetaScore Detail' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]' type='filter' w='16000' x='84000' y='0' />
              <zone h='9125' id='8' name='MetaScore by State' pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:Calculation_872572449719549979:qk]' type='color' w='16000' x='84000' y='81250' />
              <zone h='9625' id='10' name='Average Hospital Score Map' pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:hospitaloverallrating:qk]' type='color' w='16000' x='84000' y='90375' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Trends'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='8' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='100000' id='1' name='3 Ratings by Geography' w='51391' x='0' y='0'>
                  <layout-cache minheight='251' minwidth='202' type-h='scalable' type-w='scalable' />
                </zone>
                <zone h='100000' id='6' name='Yelp Overall Correlation' w='48316' x='51391' y='0'>
                  <layout-cache minheight='213' minwidth='164' type-h='scalable' type-w='scalable' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Desktop'>
          <size maxheight='1180' minheight='1180' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='100000' id='1' name='3 Ratings by Geography' w='100000' x='0' y='0' />
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='3 Ratings by Geography'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:yelprating:ok]' type='size' />
            <card pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitalname:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Scores Detail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Average Hospital Score Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:hospitaloverallrating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:hospitaloverallrating:qk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:Hospitaloverallrating (bin):qk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:city:nk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:yelprating:ok]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:zipcode:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Yelp Overall Correlation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:safetygrade:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[ctd:safetyofcarenationalcomparison:ok]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:Hospitaloverallrating (bin):qk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitaloverallrating:ok]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:safetygrade:nk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:yelprating:ok]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:yelprating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='MetaScore by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:Calculation_872572449719549979:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:Calculation_872572449719549979:qk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Trends'>
      <viewpoints>
        <viewpoint name='3 Ratings by Geography'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Yelp Overall Correlation'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='MetaScore Detail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Details'>
      <viewpoints>
        <viewpoint name='Average Hospital Score Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MetaScore Detail' />
        <viewpoint name='MetaScore by State'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='3 Ratings by Geography' width='192'>
      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
      HGEcgwD4/wF4YYOyKcyyOwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average Hospital Score Map' width='192'>
      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
      ATUYX1Lpk2oSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Details' width='192'>
      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
      32g0+q79//GQAFs+cT0KAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='MetaScore Detail' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='MetaScore by State' width='192'>
      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
      XQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Scores Detail' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9V5Mk2ZWg97l7aK0jtRalZZfo6hKtGw1gAAwGsyNssTNDszE+8B/whUMu
      H/i6ZqRxubs0kjs7A2Cgu9GyRJfuyqoslVpE6szIyNBauzsfIisrs6q6q7qBaXRXxmeWDxnu
      1/1edz/3nnvuuecIqqqq1KmzTRH/2BWoU+ePSV0A6mxr6gJQZ1tTF4A625q6ANTZ1tQFoM62
      pi4AdbY1dQGos62pC0CdbU1dAOpsa+oCUGdbUxeAOtuaugDU2dbUBaDOtqYuAHW2NXUBqLOt
      qQtAnW1NXQDqbGvqAlBnW1MXgDrbmroA1NnW1AWgzramLgB1tjV1AaizrakLQJ1tTV0A6mxr
      6gJQZ1tTF4A62xrNoz9UKhVWVlb+GHWpU+crR6hHh66znamrQHW2NdI//MM//MPTTvrdf/if
      uSu1s6fZCYUg/+V/+/fku97AlrjDv/8f/w96vvMqjq+gsr8X1SRnf/lLRmMCXa1+JAEgwie/
      uIdrVxvK4iD/3y8/ZnRkmKGhIZaSEh0dPiQgtjjIf/0vH+I/tB+7RvgjN+QZUGSu/+6/8uG1
      e4yNjBJYjGL3N2IzaEDJcfkXP2MgotLf5kcUBMjO8LtPVmjv8W/oxJnZ63yypKPHb9m47Mi5
      /4d/GcxzeHcbIqCqKkOX/pnfvr9I15E+DOUcozcvc/7Kde7dHyWchcZGH1oxzfl//Dn3UwI9
      rT4kQQC1xMWf/Ec+mFc50t/CWuAuw4tlWhvWvyRV4d6lX/DRjRDdO7vQi4BaZuTie/z66j3a
      e/agLlziP//6MpOjQwwNDREpWWn16Tn/m3/k0s0hRkfHWI5V8DZ6MWhEohOXuBM10+YxUc0n
      uX31/ONzgCdRzKYplKsbFculk5SqoCplUok08h/u1f2rkY+EKLo60BdXKZR3oTVIgEKxUEIB
      VLlC74vf5cxOzyMlFSJLQfYe9DMaSNCyx803QAQo6d28/YPXaXbqWb57nrtTyzQf7aEcXyFp
      bcdYiFKUFSyiBGqVYqmypbxaLVOsKFt+05qsNEaTLGQVuiwiKDlieQGXXocCrAVuM5N18N0/
      ewUTeYaunufWtJ/TO7RIJj9CKUKhLKM1SMjJOeKaNhzGmgYuV8uUHnxj61SMHtrNCRYiBXY3
      GFHyaRYrDtqtSWQVlGqJfa/9Bac69Q8LlXMUjY388O3XsWqrLN6/zpXbM7x9oh+lUqIkyKiq
      yvSdT0lb+7aPChRcDdPc1kmLHlbSxWcvWAwxG/ew//QxhJlhstWnF/k6IQgivgY/D2Z6K0tr
      NPd0s8dSZjJW+fzCj11Mz859PqZGVlGAcmiEkmcfNl2tS5hfSdC/uw+rXkLSW+ndv5fM/DRV
      FQSdiT6LykyiBKrC4uQKLTta0X7uDUX87R3EFxdBhXQyjNnhRys+WxckaY10vnACe2SEtfzD
      31WlykI8w74dXc82AkCKCz/9zyx/YoNqjon5KHuereDXhDLhcIK2Xj9uwwrnpkP0+bqRHjlr
      9Mo7LA7WXolnxwnePtJFdGEBQ1szZo0buyVNNFnA6jF+9U34opSzzAWmyFg0LM/M0rb/NCCz
      Gk3Q1uml0dHCvXuz7PPvespHuBWtZyeG5RtkS24Wx5P0vdjN7ORq7ZZKBaNet3GuRmNCEAvr
      wifSsrOVK/cW2O3uYLEgsKPJyGK49Ln3szk9zI0vUqGX+MoyrtbTREI3N44PfvRT5s21frz1
      0Ou83Gt75ApG7A4ol9lop6oWUGUDOp3mWQXAzqt/+ff87Uu9kF/mP/xP/8uzFfuaoCRnGbw3
      w3j4n9EpORIlP/EXuvDqt563+9T3tqhAqqqyEJhgeHGElSEDqXCEPu9hOj3NX3ELvgRqlXwu
      S1Y00H3oFG2NTtTiMvdvjTK+kkInFYlnrMRe3EHDF7isIBmxGSAcCrIiuXjNLDC7fswgackW
      ioABgEopjapaENY7bNHRiad8lqWYBUQnJv3TPz/J5KBdHGI2HiOUsvHCYQORTcdfeOsvH1OB
      tjwGJUM8ocFn2NQGwYgoFSkWK88qAN9kZBZGAhz5q7/nxXYrAKPX32clmMTb+bSyOSIlFz/+
      u+/hMghUE9O8e2OF8r5mdE8r+sdG72D3/kO0uB6MVgrh0SF6/ux/4I3+Wi85ev1jVtdiNHif
      /bKCINLTbOfDkQDtrb1bPqDuDh8X7g7R6D6BVU0zdOs+7l1voNlQtHX4G11MDVzDcfD76MTg
      M9xRy44Dzfzs3as0Hz+K5dFh+3OQK3kmB65QaT+A3wjR9d9FUUOPz87N+2PPJgDu1k5MtvUH
      Kelo6uzFYQCNYqWrvwvD5xf/o6JWy0QENzv8D2vZ2NrFXDYDWHD67GgAUW9l+dr7/ONgrbty
      th3k9f06tC37setrv2nsLfRYQ8SL0PB1brQgYHe60Gk2TfHkEsGsnf17H1p1WttaGc8UQDJS
      Dl/nZ/84ioCBF7/zJzQa7bjVrWJutLmQNALWtk7coyF8Tc1AAYfPgRawdR7maOkun/z2ZxQU
      PT37jnKow4FAFrvLhgT4G5sYns3Q22JCyBhwO2qdks5oxa5ufagWix2dVkSy7sZjC9DurVmI
      HG4fOqk2Okx98i/MX62d39j/EmcONeIWUvzm5z9BqzfTtesgJ3e2IgJakwOHoANBoPPwaUp3
      r9cXwupsb7aNFahOnSfxXM4BCoUCiqI8/cQ6257nUgBKpRKVyhe0cX+DURSFavUbtkDxNaE+
      B3gOkGWZUunz7el1nsxzOQI8RiVPoiThtNTsxdVSnoIsYjUZKOYzKBoTJp1EPpNAMjrZME+r
      KtVynng8RVkRsLk8WA3aDbv21xZVJZfLojOa0UoioJBPZ9FYbOjUEsmCgsNiRC4XyFdFrKZN
      dnRVIZuKkymUkXRmXE4bmk0rr2q1QDiaw+FxoV+3MsnVEoloDKOrEZMkk0xEKZTXVVBRj9fn
      QihlCCeygIDWaMHlsCIJoCoKuVwWo9mGJNZcUpKJBIWyjNHqwG4xIgpQKWZJZSs43E40wno9
      MzkMFsuW+j1ArhRJJpKUZLDYXViNGjLxMNnSg3rpcHuc22QSHBnjd4OLG//GF8cYGJ4HYG7o
      KqPLaQBGr/+OpfTDYipFrr73DgN3h5kcu8sHH15gLfMN6GlVhTu3rhJOP6hrkZHLl1krAull
      PhqYACATHGdgfHFTQYXo7F3OXhxgcmqaO9fO8+lYkM2zqWoqwM9/+j6ByMMHlQpN8v5P/m+G
      1lTkQoLr1y4zNR0gEAgQmF+loqik527x3pV7BAKT3L52kZtjK8gqyJUCNz69RL4CqiIzdfsS
      1wbvMz09xcjENIV1TXZxbJCz77/HYnq9NnKBW5cHSFae4ImmFrl/5RwD90YJTE4wNrVEuVrh
      9vVzjEys12tumXxF3iYjwJdCJTnyCbHGU3z/eDMSEBq9xM2Reb53ov+PXbl/FeRihsGxICff
      eAuPSYuq5Lj64TkWmn10OtcdCQSR3p1trMyu0d/oQINMZClEa3/3xnUsDd28dOQwm5chipKW
      jl17ObXHi1LJc+38JVZa3DRtMv1XUgHGw1be/NYRjJKAqqrro22VtUSB/Yf6WJ1foXNf6+c4
      JKrEJ24Ssu7mzcMdtVFGVUGuYHK3sPPwaWybBrztMQIApWyCUChEKBQiGk8jP3XmU2FpPkPv
      zmY0goAgCPhb2ijG45S/igr/vlTLJGJRwuEw4XCUbPnpk+RKOYOgc2EzaBEEAVGy0NhgIxFP
      bzlP42zDU14hkldQixGCBTctroceRdVClkgkXLt3PI2yaZopCAKSzkRvo5aV2NbRNL08h6V7
      B0aNWLu/KCIIoOQWSasttDS3kEsGkT9v2qpWWVoq0NXlRyMKG9cBkEt5og/qFUtSlZXtMwKk
      VmcZGkoCkI2uIrU3PaWEQqmowWF42NeIWg1SVf5GuH9TzhCYHCds1AAV1tIlep9SRFUriOgR
      Nk1yJEmDIj/SYsGAv8lIcCWOUVhF39yIKTm7cbiQWGV0REYUAGsjpw49OmIK6PUaHr1suVTE
      aDE80rsrhMcnsPW/hs1axZAdIV5V8H1W160qlGUBu/bxMaKUiTI5PoJeAkxujh7YvX0EwNd7
      mDdfrn0C4elBhuJPK6GjuVVleDZN9y4bIpBaC6E6bF9r148NTG6OHDhFs9MI5Ln5uwtPLaLR
      2qlWJyhWZHR6CdQK0WgC217rY+e63M2MTy2xpMvS0bUDNfnwmLWp9zEVaDOqUmExVMa3d+vn
      52pqZWBilkr7jg2XZ7WcZnghRiTwG5YElWo2RjlwhNf6PsMbS9DS6IXASoY2m3GLimPytHH4
      8MtbVKBtIwDPgiJXSCVixFTQGCw07HuRK7/8kHHjS/gMFQbuzLPj+JvfiA0xz0o5nyEej4Oo
      wWI20+EUuHF7jAN9DaSWRgiLrexxP+7+bXA4MWYmWNWb6bQZSG06JpfyJBLx2q47UYvdbgFV
      pZBNEY8JxJcDrIo+XnYYQS5slNN5+3Hf+Zi7E0a6/WaSqSwOvUrVs4u/On0IQRBQi8t8cG6S
      fPceUMukkglErYTWYMZi1CMIIg079zFy9gYjusM0WwVSOWhuca9bhuJUdYCgwWqzPNuWyG8+
      AqLBit+x/iIFAb3JitNmQhBEzLaamayaTzM3O8vy8jJprLQ3NdPV6mBhYozZYIL+oy/T12j/
      2plBVVVFfkSfEAQRh8ONXrveBwoabG43elFA1BrxOmtOcYnQPPNLQYKxDC5vA+3d3UjpZSYC
      85SMzZw4sguTdnM/KiBqzTjtFuyGMji6aXYaEQQBvc2LTS+Qiy4zPbdEMBgkGC3S2OJHh0xw
      cY7VUARsrbz4wk4MtX2piJIWh8uNVqOlpa2J+OI0gflVDK5mHGYJm7MBu7WmGgkaK3oph9Hq
      Rq9mmAnMEwyGKAhm/G4bogCizkJLk4PVmQnmgwlsDa14bAaKiVUCG/XK4m7w1RfCngfqC2Ff
      nm1jBapT50k8l3OAaDRKufyNMFb+QVBVte4L9CV5LlWgSqVS9wat80w8lwJQp86zsj2sQNkQ
      o2sVfPaaFSifCBFMlnBYTahyieXpEW7dGWI1UcLhrjl5FTNhBgfGcLQ1U4v6kSEwGsHiq23t
      S4VmGLx1h6n5VQwuHxaDBoEyC5NzaB0udOuzq9xagGDJgsMkASrRhXlyGiMmbZW5qUVMTueG
      vTyxMk1StWE1SECV1ck5ZLsdg/QFp2qqwmpwEVFvRacRyKwtsJJWMZVWmc8acJlrq7bJ1SUS
      ZQmrqWZTL8bmuDoSpMnvQRIFoMzKTBCdq7ZtNL4yQ6Skwy6kGQ1m8TlMpEMzDE1GcDd60AhQ
      zIRZDhWwO0zkIwsE81oc5oc2+6WxT5mMSTR71tcWVJng9D1GZ7N4ml3kgtN8emOQqcAMMzMz
      ZEQHjU6Je5cucH9yhoXlMEaXD4teg7DehvhGGxQSwQA3B+4wt5rC7HRh1mtAKTJ9/w6RqgW3
      rWZNqqRWmY1Vt8kkOL3MnZnoxr/Z6DLTixFAZeb2BW7NF9m1bx9OJcSH525SBoqpJJHlu9wa
      Da+7TSQZuzNHGZXi2hDvXZ7E27mTHe12Bs5+xEK8CJQIDI9uiR2UXRkjEHlgoVFZC0yzmi6g
      KgUmh8YpbtLUogsjLCUezF2qLA2PE3uSs9fTUFWW5gNkSwpqJcunN+6iarWU1iYYDz20u8eW
      ZljccGqrsjB8m/nAPEsbDn9lFsZmKaJSTi0wcHsGjUEPuTXuTIcASC6HWVq6y8RiClWFQjrE
      VGANFciuBZgKbY3SEFudYPTOJKn1ZyRXikzODRO4O0cBlfjiGsbWbg4cOMCBAwfo9FuBIosL
      cbp376Ov3c7Nc+8TCGUBiC/PshSutSEcuMMnt+dp3bGHLp+VQqkW/6mUCDGyEmJueJjCug9M
      ObHEyGJ0mwjAZyHHmJqp8uLpIzQ1NLDz8HFay/PMJFVAxN33AsribeL5TV+0WmZ0IMCuV16m
      v6OZlq49HO6xEZj7+kXUVtUq87cvoul8iXaP5fPPLUSZzjbw9gs2phdTbNaLVbnCvVv3adj/
      Ak3WR6MISbT29LAUGEfh6dq0ZHCzo6HERLCAClRyK1T1rdgND+wxGuxuD36/H7/fj8NcW7bV
      Gsx4fA20du7ilUNtDE/OPXI3hempaXYdeYmulkbae3tp99gBiEbC+Jt2YtZmyOS2Gke2jQBE
      Zu5x4cIFLly4wI07E+RlIB0hbW/BY6zF2hAkE93tRpYfhBETzexuszMys/LwYVeKrChGOu0P
      19M9Ph+ZbOYrbc/TqKZDXDv3IdcTbl7e5+NpIU1jK0EszQ34u3cizo1t9NDZ+DxXPv4NIamf
      PW2uJ5Y1ulrYJcW4vVp4BhEQcPfuIDczQUVRCE8EcO/s46HrTo7RgWsb72pq9fHnamtqwZhI
      k9/ya4JMyonPY3r0SbAWXMPf3k6HQ89sZKtj37YRAKu3hf7+fvr7++lsbajp6BotUrlMdeOt
      qVTKVbSah8FnfH070a1Os5JbV0UEEZ2sUN5kO5DlKqLw9XqUosFGe2cbulKKTOnpFrGlxTlK
      uSyzCymq1VWWwzXVRW9209nRSiUbp/hZ6pigofP4YZL3BkmXn34vvdGLqMTIpiMEMnb6vZtH
      FT2Nnd0b78pn0z9WXq2WKYvCIx+vFklTolp9ZFzILjO1LFNILFOiyvTYAqVNp3y93tq/Igab
      h+bmZpqbm/F7HbUe0ezHXl4inK6gqipqOc34vEz7Jid1Ueekt8fO1Oh8rXfTGGi1FpgO5Wtl
      VJXQSgi7w/7k+5otFDIZFFVFVRSychWj5snLL3qjiUJ+/brVKmlJwPyMcTAfRdSZaO3Zw2u7
      rZz75D75qorBYqOQXq+LqlKolNDrdKCmCS1lEdUcq6shRK2RUKim42v1Vlr6j7LXk+D60MJn
      uiKLhgZanEXmgk/1MkTQGmg2CkwEVtD6vZi3fIUaXL6GjXe1eQINtXrHllbQ+Nxs9VCyYrUU
      CK6lN96LqqpEZ2fBZSEVWiVcMmHJB1jNKJvutp0RrRw63M65j95jzu8kn4ggdh2i0wibnBvx
      tu5AmPolSaULBC27T53kt799n4+mG9ArWeIVK6/ubwVyFJKrDF6/jFUDDb0H6O44iPad9/k4
      3YRezhBXG9jrtABJ0pEFBq5exiBB2+5jNHTt5t6H57kQbkTJxym4evDofp9XJOLseYld4Q+4
      Oerk9N5DeG//mvfPNmKV8oQLdt54wUVh/jrF3pf5/ol2RKCaWuSdKwuUDvkBEESJvuOvkj73
      MbcDVo5+Riz8HXv3MPyLd9G1+p9SL4me3S1c+PktXn7rB8DmiXKeidsDREy1z9vdsYfdbRKZ
      6CID165gEEok8lpOnel+5JoC+44c4/yljwnP+tBUVfz9fUSXC5w89Rot9lqntjB0maX5IF4b
      ROeGt8k6QDlHrCThtq7HrCzmKFRFbBYjqiKTTcaIZwpoDBa8Hic6SaRaLlKsgsVkAFSKqRip
      ih6Px4oElHJJovE0VTS4fT7Meg0CMrHVIJlSTVWwuBvxWHSUckki8TSKoMHtb8Ckq4Ukj6ws
      82B+7fC14DCKFDIJIoksgkaPx+fDoBW/uPepqpLLZdAZrWilmndmsqDiclio5FNEYkmqqoTT
      14DVIFHNpygIFmzGdWFTKiSTBSwuM8VkHoPDigYoFzLkKhJOo0CsoOK2GSnlcihaA0adBlBI
      R8KU9XbcNiPVQpq8asRueqji5LNJNEYHOrFCLJLE7PJg0FRJxQqY3VbkbJJwLLWxYcnk9OOz
      6wgvL5GvCogaHR6fD6NOQgBKuQwVUY/FqANVpZhNEIlnQGPA7XFSLuSxWO1o1h3vau9ewqyV
      CYWj20QA6tT5DLbNHKBOnSexvecAzwmyLG+rQGB/SOoC8JxQd/77ctRVoDrbmvoI8BwSCwxw
      7vY8cqVIRdVg0JnYc/IM1tAESt8xOqy1hb7pkVsYm/bQ4irw0T9/REKqWZyMriZOnjzFg9wa
      SrVAYGiQ0dkQsmRm3/ETdPvtiES5dSXK/jM70QOl6Cx3whpe3NXG9MD73JxNr0dtM7HvzCl2
      6qL85OPbPFjacDbs5tSpHczfPMeK0MPLR3vQCLA6fZeUuYd+v4650UHuTa4gS0Z69h5hX2/D
      emqrMlOfXmam5OHM6f2YRAFUmfnB81yLmPjh6ydg7T7/cmkCg1YERJr7j3Jst4vbF84zlyyh
      0RnrAvA84u45xl/0HGN18gYzpVZO7msGKkyMRZE3uTVlkjHwyEAZvXsPf/rWXh5fd1UIj19l
      NNXIW987gVQMc/bcZUyvvUmTtUgsnN6IHKeUcsRSNZNnRTJx+luv0+rctJAVmse16xXe2ufb
      dPkyaYxoo5PMx5rp8RgpZOOkxSqp+XFGkza+/acvIpXTrIQLKLAuAAqZogktK0STO2lz6VFL
      caZWBczGPLKqIlYLdB3/E071bPKDKidIFmx85y9exVhI1VWgOk+hmmZ8UubFU7sx6SR01gYO
      91iZWU78AW+ipauvg4WpwJYwjIJGRCllSWWLaIx2OjoaH0vo1+TxEY7WPH2Ta2sYG/0Yn3Hh
      RGu010eA7UWBq7/7OSPraU2jmSJv9tSOrE0N8MvkGBJg9XVz6uQLWLVAqUTCZMa97k0nCAJW
      u4VcpMjnadDlZJCz7/4Ss14ErZ1jp0/SAQRufkRyvDYqeLte4NThVgAs3mbcKwPMJXZsLPzZ
      mnezO3mfG+feRbC18MLRgzQ6TFsWBj0NHu5NxKj2NhOJJ/C4u1hM1dw4lGqZOxd/Q/C2FgSJ
      zv2nONy5NZ5QXQC2FUZOfvc77HbWlIg7Vz/cOOLvO8aLT1KBdDqs+QJpFdwCgEohX6j5EPHZ
      liedo4k3Dp94RAWCnqNvPaYCASAZ2XVwBxfv3Kdlfa+MoDHSs/84PfuPsjZ7h2vnB3jtB69g
      35QoT7I10KJMMZ/pIhFX6OmxsbgepE7U6Dj0yg8eU4E2U1eB6nw+Ghu9rVXu3FuiXFWoFFKM
      zKTpaHIg4EanWyWWLKKqMisrYRyOx6PIPStaazON+hRL0dpml0I6RjSRRVYFXP4mLGKJ0mMO
      qVqauvwsXbtIzteP/QskPVYqxfoI8DwjSho0G9spBSSdjs36g0arW9/6KBCfH+RXPxtD5BEr
      kCDRuv9FVq9e47e/+hS5kkPw7Oe4wwQC7N7ZzI1z73BVVjG52nhpT613l7MRzr/3S4xakQ0r
      kKhh4c5ZfjZe++xqVqB+NBotoiDUnO52tDP0zqf4dghUS0nufjpEolBG1Jro2H0Y98aAIqDR
      ahAEMLvayESH2f2SE0GooNNqqaUQUBi+/FuCtzVsWIF22ZHKQd792c/QafR1X6Dnga8yMJYq
      l7j64TvY977BvrbPcAv9BlEXgOeArzQynKpSLuaoioZnyvT+dacuAM8B9dCIX566ANTZ1tSt
      QHW2Nd98Ja7O46gqiqoiCAKCAKqioiIgigKgosgKCCKCKKwbhVQURUUQRQRUFEVBVVTYlF5I
      VZSHqY4EAUkUARVZVtZ/epDSaFNGSUVBfuClun5cXM/ZVfNeFRBEEVEQNuq8cb/1Pb2CUMty
      qSggrqc8UlUFVa21R1FklAd1FcSNNm9co1YQcb2coihs1nnqAvA8oioMfnqR9r2n8Vk1DF9+
      l6z/KCd2NkIpzC/+8V20vUf53ul9tSQWrPLBP01z6sen0ccXOPvJTTKlKqoq0HboFU70OPjo
      5/+JNdmDTgL0Hl598zS++C3+11+O09dgQVUUWvec4vi+9o2oeOH77/P/Xluj1WVE1Bl54cy3
      6bDkGbxykZlYARQVk6eHN18/hjm/yj9dmuLH33251gQ5wUe/ucFL3/826sT7/J83qvz433yb
      ZruORGCAW0kPbx3p5fIv/ncmsi5sBgm9rZFjJ4/Tsp4HolKI8pv/6z9iePXv+d7+BsqxeT68
      dJNsIcXCbJ7WHn9dAJ5vVPKrQ8wWGnmtp7ZRPbmyjH3HfuRslJKsYNqSx0hm/t4wjv2v8u1u
      N0q5QK5SO25v2cmJo29g35QfSokL9B57m78+0YJcznH+7FliXc002tY/K62Rg2f+hDf3Plz5
      nb93jaSpjx+9thONUmJ64GNujIV5pePzW9Lf3cRUYImGw1s3w+scTbz56vfodEmszdzj04Fh
      /G8dRQvkQ1M4jn2L6tIsmT0NWD1dfP/PuqiW5/jgVyFe/8sX63OA55lKPsbFgRlePHME63qW
      l6VQgraODto0BRYzj4ZUF/E02pi5e5uFaA6N3oTd8gwZ0QQBSW/CYhB5mkklHEvQ1t2BXhKR
      tEY69u4mPzdL+SnlvJ27MEQnWU4/OTaRIGpo6N6BNxtitQhQZH48Rtf+QzRbY6wmnmwlq48A
      zynl6BzvDM1i6zqAz/RAL88TiebZf8iDdZeX94aW6D3TzUPXGhHXjtN83zrB1UvvcLms58iZ
      19nh05NcGuMXs6GaCmRr5k9eP4kNlVDgHlfVRSinUbyH8Nk2OepUCty+/BvW7hnRGMycfPOH
      VCsljPpNcZe0JiS1wFM3tElmdu5uY2BojMOfFXVFNOC0qZSqUImHmNU38AOTRMjvI7C0Qp+n
      67EidQF4TtF5OvnBycOs3b3IrZkeDnc5UdbGuTu5yGLyvyGpRbKKj8TRTjwbEaZq3bC9eSff
      +WEf6dAQZ6+P0fr9gzhad/HSoypQFEx2L/pKiJGIhR+dakGzOYGa1sjhV3+wRQWKGk0k02lw
      OQGVcipERe9GoxHRKApVlVrQMrWKQs3V4cHgYPN3YB26yorV/MQ2K+UEwZSBg0aILM2zOjrK
      P61OUi1myFl38tLBrk3CXqOuAj3HSFozB86cYW3wAkuJDDNDC7zyt/89f/vvfsyP/+bvOd6t
      YS26OfamzMr0KPOhJAoCciGPrNN+Ti8pYPM288LptznTrXLh6jD56ufrMm2tLb4Swr8AACAA
      SURBVEwMDhArVCmlQ1y7PE7HgV50Jju9UowbgShytczC/QHUxn6Mm24uai0cOtzA8M3Zx5KV
      K9UC96/eQO3oxiNBKJTg1X/zd/z4xz/m7/67v+GQIcVSnsfYHvkBtiHFYhGb04teZ6TNp2d6
      PkLJ6GRfd+NGL22UBLKKBq9DTz6j4mvzYRKrDA1c5satu4SqPl59+QAWjcha4A5Xb95laGiI
      oclVfK0tWKQKWdFOm9eKo7ETY3aBYFGH32lGAORyAcXgwr9p2DA6Gmi2FLl8/gLDs1F6j7/K
      niYbgqjB395KcPA8V24NkzH28sZLfegEAaWco2puwGMS0Jj9CNlZcPTQ7rWQDk4xcOsuoxPz
      eHcf59iuViSyREICHX3N6EQBRC0OY4m1sg2/TYuqVsnnJBpaXfWV4Drbm7oKVGdbU58EPwc8
      KVF2nWejLgDPAYqibKu0sH9I6ipQnW1NfQR4LlGpFNIsLQXJV8DhbcRrk1iZX2BzujOzvZGm
      BgPBmTlyVZC0Bhpa2nCYdBsOZbHlGfJ6H63e2l5fpZwmnBLxeS2IQDkbJ60Y8diMRJamWEuV
      AQGjzU1Lkw/9FlcLhURoiVA8i2R00t7WgFRMEquatliKMvEQqsmLzSATnFtB52nEbTUgKFUi
      4QR2vweNXCGSSON1u2tOceU8S4uL5Mrg8DfT4LKyObdIOb3GfEKhs6UBrSQAMuGFxfoI8Dyi
      KhVuX73EaqqIKheZnJggnS/X3BSyIa4O1cImqKiUsxHu3Z+iqkIps8alywPkHqRCUlLcv3Sd
      S0NTG/Ef5Mwit4ZWNv7PBMcZnq/F5ZkZv0O6BKCwMnGLW1Ohh3VSFSKB21y9N0uxIpMOrpKo
      VCmtjXNzdnM6EliauMVivAxkuHd5gIHRAKqqglzg/s375GQVpZTh1v1hKoqKUs4xeOUT5iI5
      qpUiq6trVDevLKtVFu/d5PLtIWIbSfJKTF6/Xh8BnkcUJUksZeT0ywewPsw+h9flhoSR0Vya
      PXv2AJBP5LF6mtm9ew9aoYLm/FXWSmUsOiOFlWkqO46zMzLLShFan+IWpDM7ad25B68JsnaV
      i4sJoKlWp1KGwYk1Trz2LdybVrdyn3GtB1i9bWhyy8xldtJtfPI56dAEEU0nbx3fuXUl+sHz
      KMSYKXl4vVtmMZahYT3vmNHZVB8BnkdE0UWLJ88nFy4zPDFbc21+aimVailPUlYxS7UMNjPz
      WXo6mujttRCYjnxOFKAalXyKuekJxkbuMzC2Rm9ny8axUjGJpPNi1T/qjPAUJAN7j+5g5tY9
      8vKTW5EMBfF2dCA94eMHSESimD0e2rqaic+uPEySJ2jrAvA8Ioga9p36Fkd3NJKPzPDR2SvE
      c5+VP0BmdfImP//pT/nl+1ewdO3AY9Ail4us5vNYRBUcTRSXJyk+xc1BVaoUi0VKJRmDQaK4
      xTKlwhdP9gSAaG2nwZgguB4v6LH7qsqWjTiPHCWytozRbKekcWErzbO6yaO0rgI9h6iqCqKe
      hvY+Gtp6sVw+y3I8g9v8pDy/Eo39Rzmyr4EbAyNY7HYkQaCQniO4lCBfuoCgKsSyKqlcCa/O
      gFjOIqugQaVcUtCtJ/LTWdx07z2A1wRKco5f31lmf4e3dkzvoFoaIVuScRm/6Gcn0L+jg0uD
      szxJjB2+RkYXFlBa+x8fBapJZibXKNpvsDIB+XwBdSlEh90J1AXguURVYlw9N4q7vRGdWGUh
      I3PA+mgC6a2Y3G2cOqnl2qeXEQ8eR55ZYO+3f8TBJj2CqrBy/wrz4Qz+rhYcfMCde1o8Zpic
      TXPgTC0+ULWQZnEuQEqvkliexubYuXF9yWDlQLeLa1dv0NPup5ou4N+zA7OqkFxbJBDIIoom
      mruanlg/vbOTbscE7w5WePGRY7amHTinLnLjThWfVaKg6NnZ24VWUskuB5B2nOZPj3QgAvnI
      HBdHgyjUBKDuDPcc8NhKsGDAalRJJlMUytC//wUa7IaaaVPUYrFacVhqM0pB0mC2WLFazeiM
      Fpq9FnJlMFt8NDc70QmAIGC2WhE1euwWEw1NfgrJOJmCTM/ewzQ5TQgCiKpMOpOjWCxh9HSw
      v68V7XpkOkEQsXqacGrLxBMZJIuLJo8Tnc6AXMhQLBYplsDd6MFsMGOz2TFotRhNZixWI6Ig
      YnG6sVutNPjdaCQJs9mC3WpB0uppbm2imIyRKcq4fE04LLX2VqoCvkY/Zl1t7qHRGzHoDdhs
      VgwmU90Z7nmgHhfoy1OfBNfZ1jyXc4BQKESxWPxjV+Mro+4M9+Wpq0B1tjV1FajOtua5VIEe
      I7XIcMbB3hYbUGJscJiG3QdxGSXSa1NcuxXm9HdPUttqrbI6NYHsa6PFbiIwOYyzZQduSy0w
      fT61wsKqQP+O2jJ6cW2CqXIT+1ptACRXx7lxL8Xpt4/z+YbHf21klscHuTk8h2Rv58TJw3jN
      OqimGbh0E2v/EXa22GtLU2qZ4asXGFtJYnC2cuLkXsK3P2VoJf7wcnovr711lPToAp6je3kQ
      GL0cX+Ts5RukCzUVzNqwmzde2VfLNCOXmBi8Qljfx0sH2tY3pFeZu32Z8aKX147tpbh0m/dv
      TK1fTaTzwBmOdJm4dfUic+EcGpODfUdeoq/RhiBAYnaQmP0gPW4JUFkcucbg+AqirZUzZ47h
      NEhAhbvnzyL0HOVAu6dWz8g0ozkvBzu2hnTfHgKQCzMf0bOnycTC7UssS330G2qD3/LcNGoh
      zfByieMtekAlsbxExeSnxW4iuDyHxtOzIQClXIylZZG+HTV7dSWxzHzesSEAi7MB1FyOseBB
      Xmh6POfiV4GqKszcOsto1strf/JD1ESEMrUPNLMyy3JFwTI1SV/TETRClbFP3ifif4HvH/OR
      XQsQiSnsfOl1+lWVe5d+jb7/bXY2GJGkPBOT8xg2CUA1G8bYdYK3djXUfhDEh5EX1CpLeQEx
      fI9IbzMNZgk5t8b9xQro56gqeymlgnSd/HMONz4oLiHmw0znzPzVn3+bYjrEjfPvkz7+bV5o
      tZFbm2ZVPECPs8LswMfcL7fy+nePoKZCGyvVcmKamaiMIMyzr92DCFTTQWZipscEYFupQPn4
      IiNrGo7ubq2tGFZjhMJGDp7ZT2IyQOX3nQ1Vo4RjFvad2E18eo6neA78q6EqZWZWUhw7sg+7
      UYejqRmfuWb3Xw7F6evuRSilyVcVQKGYB4tZiyBKeFp3sbPNgShJaDQaJFFEkjRoNNJnuhsI
      Yu1cjaaWkWbrWXp8PiuRcC03VyIUxdbg3ZKLTJQ0G+WljXilAhqNBourmVe/e5LVwUFym1y5
      q4U0Q2sKrx3fjc2ox97Qjt+iAVVmeTpI29FDNOUjBIuf/xK2xwgAzNz6mMRtmUM/+Evs6w5Z
      ueVpik09+JxetJULZIs7cD5rjs0nkF2YoNzaj99lYaT4KYVyH1b9V9/HqGqcStmP1fxowqwK
      kXiW/j0tWEIjTETLHG0ysPvEQc598gm/uKGla99RjuxoWU9w/WzMDJ4jOl5zFbV3HuLNF7aG
      L2z2ebkVjbK300MkHsHn3cVSYhmoZXIc+PjnzJsBQaL3yGsccG8uLSAaW3CZb1DYtNRRKmbR
      Gu0YtVud69RqkZmkyv49PtS8hnuBBM17nuQCUmPbCEDHgZd5vVfiysWzuF97C79R5sat+6xk
      JvnncYFyOkmlKczb+z4r7FgNUdQiqwVQVRCgVKqg02lRSlmuDY6ymp/lJyNQSiW40XqIN3Z5
      v6IWbqqj4EarDZHMlDHbHyTVUokNXeDOQpT5X/0U5Ary8if0/PBtnM423v5BE5WKDKkpfvVx
      nB98az+6z73LQzr2n+LkzpoKJEiPf1Kmxl46g+e5P1UmXOniVKOJpXW1X5R0HDrzBofWVSBJ
      q4PCVhO2nJslVmjCbIAHMmAwWqnkEmTKMi7DQyFILd9lbHyO5VAIlDIZTZEXur/9mW3ZNgIg
      aXVYHF6O7vFx/dYoJw46KJr28G9/eAKjJCBnZnnv0gK5PY8IgFwhGY8RUXPoDBaMNh9C+jxj
      Cw14NXkGJnMc+JaVYm4J2bGff/vnx9CLAnJ6mt9dmSO/w4vpqx4ERB07uxu4deMmyv4+lFQS
      rc9JYK7Mj/7mb2gx1iaQg5/8jnAkTiQ8TdnWhN+mIzw1j81z8LM/DLVCMhJBD2iNVnRApVQg
      k6kF2JJ0JrR2zVbdWtDQ0N3Cu7+6y94//xGS8FCXUVEp5jNkMoAgYDDZ0ABqtUAkEqFSSDJy
      e5i+l97GuDk9qsHGC51WLly+ybF9XZCJIfk7iAYinPnrv2OvV4uqVLj/yTlW0nk6VShkkkQi
      OgRBi8PjQMN28QUSBESDFbdFj8ndjEWJUaxK2Js68dsNCICot2Iij87mwaCVMDucWPQahFKK
      2fklgsEgedlMQ0sDnS0uZkZGWIpk6Tt8gk6PBbmQReduxWt7cD0bJrWA3uHhi7rA//7NFbD7
      W7GTZGxsipRipNnvApONTp9zXZcXMBmMoDfT5DayOD3J/NIqgncnL+1r21CBBFHE6vBgehDz
      nBwzkzMEg0GygpVWr53w4hTzSysEg0ESBQ0tze6NibAoaXA6bOgMNhSdhv72ZjSSgKTV4XS5
      EVWZualxgsEgwWAI2eDG5zQj5iJMziwSyyrsPPYSXW7Tui+TiNHmw26UsDW2Y69GGJ+cIVkx
      0tHioCzb6Oxwo6Hmf2SzaCgLFpwmDaHFWr1XQ3kaelrQU18Iq7PN2VZWoDp1HuW5nANEo9F6
      nJw6z8RzqQJVKhWew2Z9JrIs1wX+S/JcjgBa7aP27+cbWZa3lcD/IdkeVqDsKoGEiMuiA8rM
      jk0iWt0YNALZ+AK3BufxtjegBVAVFkZvMJXQ0OSxrvvKVAlO3mVkKYvX5yQ5P01G78CynnYo
      tBSgKJoxCWmuX7rK6OQ0gUCAYKyAu8FLcmGOvM6EWbepv1FV1ubuM7pcpslv/5LbxR9c6hF3
      aFVhaWKQ5YIJn722ApwIBkirVix6iWoxzcS9wVrECFmPx1kLIlWMzHLpxh3m5uZZjWVxer0o
      2RC3B24yOTPH3Nwcc3PzpKsGrLoywUgOh209WUUmyHhUxWt7sMZbJTQzi2x1YZAAuczMwhIW
      qw1JFIAqgTu3iAkW3BYDqGWWJxYRvU50gJILcXNkCbfHg1YSSIWWSFQ0WI06kHOM3RsiJ9mw
      m3W1Z1dOML2Qwe40I+bCjK+V8No3xVFRVXKJFe7evsP03Co6uwercbtEhUivMB7MoqoyqyM3
      mEiKGNbj5azMjBGaH2ZibX27taqwGl1m4e4QsfXEVXIhxb2FJVbHJyjICpHpEVZzDz+44Nwk
      a6kSlKKsllwcPnyYw4cPs6evA4OoEJqaYi27dXFHVatMTY+zPHKf0FOW678wqko4ssT0nftE
      irV6xpYnCKYqqJUUn174hKS+kT27eykt3+Ha8BKKCsX4EmlDC/v37aXRmOPS1Tsoeif9e/az
      v9XEcsnC/v376GpyUk5HCCw8DHxFeomhxdSmSlRYnhgn8UAzk8tMTAcoVWrBVZTsEmPTIcYD
      C+vhVkTyoWHmojKgkp4fY3hhleT6c1uamyZTrK0fFMKLTIWizE7NID8Y+UpRxiZXax5P2VWG
      5mNbHkkxOc+5i0O42vrY3dtMKZulWs5sEwFYp5wNc3s6y9EDPeglAdQ0a6siR17ZS2hiYcN3
      R9S6aGlSWFqpLe5kU1GMNj9GzdP7aZ3Zjtfrxev14nJa0XzGE1aKK2TkHnb3G1leSj41udwX
      RdC76WzTEZhe3fJ7emWGtK2HY3u78Pmb2f/CCySWJilVa7mDTVYHHq+Xjr59WKUMVVWL0+3B
      47RhMNvweDzYLIbfa8RCVYjMLuM7fAB3JkasqoKgoanDTXA5hqqWWQhrOdJlI57PAyrpQg6b
      uTbaBNfidHb3opSSlJ7F4UqtsHR/iMYjL9PT1oSvqY2uVi+FWHD7CMDy2A3ee+cczcdfxm2q
      qSKFpUlS/n6a/X1oC5NkSw97dW9jJ4nQAgCx4Dyu1s5neunRmbucO3eOc+fOMXB3lifv1FWI
      jIxg3b2X5uYO4sFZeIbQVV8Uf1sv+aVJUpu0o1Qij9fn2lio0hks2ETIVbeqUNn4CkXVhE77
      WZ+ITHRulEuXLtX+bk8+1oJKMcnd6+vHr15nMVKLA6fKZQKxKt2NjexoVxmfSaMChqYuNKtz
      FHIpInobuxpNrK5lQY6Sz7uxWTRAlUgsTUNzK92GIoHEM0z+5RxLURNdraYt7zCfTT+fk+An
      4Wrqol2dJRlNoPiNSIJMYHIJjVXH3HyJfDJNMJnH4avpjRanm+r0CLlKnOWImb0HjKw+5R4A
      Vl8bu3a1AqDVW5/4gNVymrvTGTyOFULZFCvzi+ROHsLyB14xFvV2ju6wcmt4hab1r1PSCDWf
      nwd1UVQqqLWE2XKJkWsfsHqrjMG/k9dfPoZB+iyxr0V56O/vq/0bLhF6JM6hpDXR3tNPkxGo
      5FnL1hyAyoU44WgC9+oygqInOjNBqecoOsmFVj9ENJrBYjaidXswDc+QCkPJ34lBBCUzx/wa
      OMIrSDqFydEFdnn7+VyzhyihFyqUqmwx+0iStH1GAJPDx4GXziBPXSMQLSBXSgQzWfSlLOFI
      DLtZYHopvtGLCTobO+xZBu8vIDe14tz4OEUsVpF0poyqqqhqLSKDXldzt9Jb3TQ1NdHU1ITX
      bX0sKyFAPhEjp9NSia4RSZVo0sQYCz9L+MIvioClcx/a8AixbG2O43TbiayuUVZVVFWlmI9T
      UDQYNRJIeva89Dbff+slLHKeqljzGfqsa+utThoaGmp/bvtjZ4iSDpdv/bjfh9mgAVRyoQBl
      vYt0PEoqKyLLMbKFKqIkYdHpCEZWMJndIDnwWhKMjEZo6vAhqgqhiQBav5N0NEJCdWFITZEo
      PCVoo2iipVlmKhBHWW+3qqqYrI7tMwIASHoHL79+nA8uXUXa7aZiOcCrp/ehFYBKDx++e5/4
      /ub1s0VaD+7h3f90kW/99Y9gIzKmSMvBY9z59bt8NNeAphClYNvNQY8BchCbG+aSugKA0dbA
      nr3dQJ6xW58SsxoxuZuxFhdo3HWSE7trHpTKLju/ujbGgW/vr8Xh+QMiCHr29Ph459JN9vWB
      qamPHQsX+eCD87itGhLxNL1HXkGvEXkwTXe27OYNs5mzH3/MvtNnaHWZfj+dfzNKnunpDC++
      /h3aTICq4Lt1kbloBo/FSYvTyMfDC5z+zilAwOYx8uHNKH/7mohSTjOypuX1t49iX483NHHz
      E0LhBD73591UouXQaeY+OMu5VS8mCcwNfezraXk+F8Ieo5InVdFiN2kBlVwqgSJKyKLxoRkN
      hWwyhc7qoFLIojNa0IgK8Ugcq8uNTqOSTmQx2e1oRCikY8RSOVRRj9fvxaARQS4SWo1QVmqP
      VKM34/W6qGbjRJM5VEBjtGLTCzXnuwdecmqFVKKIxWnlMzWOz+GxuECqSj6fRWuwoJUE1GqJ
      aCKF2V5zalPkMslYjHxZwWB14LKZEQWoFrPkVT02oxZVVcinU6h6C2aDFqFSIFEUcFprfv9y
      uUiurGJbD7BFOUeiosVpfuB4rJBPZZAs9pozoCKTyuawmI3kMkVMjgfqoUq1mKWgGrAatcil
      HPFMGYfLiVaEailLNFXB73XUrpErYLdaNjbnlPNZKqIOs1YlmVWw2Y2IlQKJkoBzc5Z7VaVS
      zBJLpJGRsLs9mPWabSIAzzn1wFhfnm0zB6hT50k8l3OA7RgYqz6QfznqKlCdbU1dBaqzrdke
      znCxSa4HJVpdBpRykoErtzG4vYxe+Q1nr9xmeHiIoaEF7B2tOAxaUIvceO83jOUMdDfW4siT
      m+PiYJzmVtcW2341OsF/e/dTnA1t61amMtPX70NrIyZVIT57m7urAk4pxQfv/Au37o4yNDTE
      cKjMvp5mguPXSehasRtU4stj3J3J4NUkuB5I0t5Qu3c+tcDd+1EaWlyIqMSmB3nv6jCe1i4s
      T7KbqgoTo3cQLT4MGoHg+E0CSS2NbiOr0/e5eOEiN++NkFEteN12tJJA4MY7fDJdob/DhyhA
      dOoak3kPjXYtqDKzdz/h4p01WntaHzHVqhQSq9y8cp7Ln95mJV6loaURjZxj6u51zn9ylaGp
      BQSTC4/djJBb4933fkdSaqDZVdvmqFZjfPSTXzFbtdLd6GTo7D9xZUXDznbvuoVOZeTiz/n4
      fpa+HS0sDN0kiQ2npeZ4N3/nY2KGbiyFBd57/2NEby8us4RSyjM4OIDT3wbVFW5eW8FizXH+
      3XcZGBzk2sCd53MO8BilDLGMA1WpMjVwnZLvEC6jwITBx/f//CWcpq2PoZpYYFV2UA0tIdNV
      ++CrecIx+ZFloSrzo3N4fFaWVsO0edoBhWwsgQUoppa5MhT+/9t70+e4rjPN83fvzZv7nkAC
      SOwEuID7IkoiRZEitdhlS3LZXe3q6nFPdHdMxMR8mT9lPvXEREzMdLdL7vLYsi3LVFkiJZEU
      V3EHQOw7kEjkvu+Zd5kPmQRIkRJdKqvKQeCJ4AfinnuWvGd5z3mf87yc+MER9NQynh0v8aPD
      +x7LoZxPUq+DWopx684iQ6ffQi9MEX+EV6bWi6SS9UbZao3pxQwtLo1QOE3b4FMOwHWdXDaD
      R9HRKxFujic48YPDqKlZzt8K89bbP6bNqnLj0z9yVzZxYneAuighxmaZSm5nT4uJWj5Buimm
      pSl1lpJl3EKW1USVXf5HVH2ULF9evI7twEn+/RteCqkkgg4rw9eZynt556f/HvKrXPjscyyu
      v2FArFCztZJfnqS67QRmAxSD86Qsbnzl4sPqU1oLk9V34xYAPUckWkQV6qhAIZNCdG/Eiilm
      oig10PQSotPF/IMRek69gKSpJFMJVA0MaoVkPI/FN8Tbf9sH8QneG6lvLhMoG5pgttzCizva
      v77huk5wIUzP/t3sFrNM577ey6hVisxVZF7Z20MqEns8fI9WYuTmA/qOHMNnetbhvsrojS9p
      3fcSPa5vFiOpVXIUMbC7r594fO2bc63luXHhGrtfe5NWq8jSyAiDr56h3WVGlG0cfWEfq8sr
      jW4umBg8vJvV4RGqXwlGVy+uUKWHwe29JFZDjzzRyQdnyLTs5oVtfkTRgLOlDbussxSJcejg
      PqyyiNXbzcuHupieWEEDjBY3VqlOplxD1xRmVwrs6PVuONtkJwcHFEbni+jolBZHUHsP4fgT
      pmuLp5t2Mc1isvTsxGyiPcD09bO8/9E9Bl84iLnJ6qxEZ/ntr/6B9957j/d+fY5IoYquK4Qy
      JTq8PgZ3tzAzFuJrghNSyseRjD5svg46lDArzcFSqwT5w9//nHm1k51dTRMKhcW7Fxplvfce
      v7s81kibT/HpB3/Pg6yLHT0tz/S4luIL4B6kpb0FPR4n+zXjs5ZY5MP3f8eS3MfOViOCUCed
      NNHaIq+XYbQ7MFZqG1o7zg78Qoql1KOdRyM+O41r+3b8vlaSychj0SJz2SJer4vHdbQqKDUT
      VsvDwSxgcnsQ8oXGu6KRwVaJhWgRTamSVXVabI/HQHUP7KYyN0lVrTI9U2Jop+9P80aLMrv3
      9bA4MkNRe/b5zuYwgYCdx9/mBfMcd0anGXh1H0bA3Ladf/NXj5tAajnIxP0JwnkFk1hgLRYn
      d6QLz1PyjM3eY3y2TjkfpBBdwj4Tpv8FH0ZzN+/+6DATH19lKTbArnYHYKD/yBlOfsUEMjq8
      vPnjN4lfP8tSOMu+HvdTSnqIKrP3hpkvhSlHIL44z2ToGC93PxlA19jSzzsv7Wb8+jVWsgfp
      dRlwuCpkshpYmzK1lTI1o2FdNEoQTew/Msi5W5NsX1e/zXB/eJVM66ckqLA4k2LlxHH6mkXa
      7Cay8a9G+zUjyRWqNZWHYj5KsYBm8a7LHvq3D3LvwiwZpw3Vsg2rKftYDqIpgN34gPhanIjF
      w0ET3P2GX+axtvt20ms/z3yw5ZlpN80KAALtO47Spy1ycyryNbO6Rmp6jK43/o63zpzi1Gs/
      4ECvRDyVfzJpPcV82M5f/83bnDp1ijd/+DZifGaDn2708NKx3UzeuEKy8qwIu2ZePvkyK3ev
      sZytYnb5ENMRooUamloluhjE1OlHz4RZMe3ip++c5tSp07zz4zMkJ6epfU32srWFM68f4c65
      z4gVdPr2bGfm5i3SpRq6WmVibJLWQOdjs6Dk2ka/M8NcsKEMnYtFYOAQ754+xanT3+On3+9n
      YvzhKiDg6tyGFJpkKppD1zXK+SwVRSDg8zI5M0dV1agVE4yOLtG7s3ujw5k7CDhj3L62QNfu
      3idJg6JIt9fJ2Pw0Xs/jgfN8bhvhtQg1VaeaD7Ga8tD22Lwh0L99B6G5aWrPWAQ2xwogyphk
      EUEysef4Sa5cvslyy0uoqSU++PUysiQALl59+xjhVYGDb3XiMgK6zvbuFqbTeXbYJWIzX/DL
      90YQsXD05Z0o7b30eF2IgG4z4jIskq+pGExGRMDe2serB9LcvT3JC4MWQiOXeW98GADBv4uf
      fe8oksGEJoLs7uLYkQzX7z2g89RBXtyxwsXf/4q6DtbWbbxxuo30yjD+rm68rgbzUrVsxzLz
      JZWaitH8eBeSZRlREDA4+ji+Z43hiQVef3E/R9ov89nvf01FBU/3bk7sapD/JNmIJAKCSP/g
      ICPjE3RJAslUio6u7biaZdp3HEC+NEdFacdqAMHSxvGXtnPl8kfcqmq4W7dx8vRxBg6+SPrG
      dX7zy1toooneoaPsajMj5CVMsgEQ8bf7uB8sc8YlUsjKGJs6nwbZhIRAa18HN/7xLtv3tyMI
      MUymhvnWsX0vwStf8Kt/uAuikYGDr+A3QV00YDQ0urTF18Vu1xjnwqaGoJYgrb/f6BMSZqO+
      5QjbwubGJjKBtrCFJ/FcmkBbMiFb+FPxXA6AZDK5qejBuq6jKMqzE27hmYqvKQAAIABJREFU
      CWztAZ4DbN0H+PZ4LleAJ6BrqDpIovjIn1R0REQRNFVDkCQEGrOppmmIogi6hobYFHICTdMA
      AVEUUJU6G34WAckgIX5NCKF/aei6hqbTbIPeaKsgNdqh66iajiiJ6JoKgogoCGiqiiBKbDRB
      bwpuaeh64wK50HxfU1U0XUcQRaTmveGHv1njplbjvcf+r6ggioiC2CyjmQ8iBklE01RU9eF5
      roAoiUiCgNKsl7geOklHVRQQpcb3bH4vVdMQBBFJapSp61rTFG7IxYtS8/s02y81r1RuDjJc
      +C7/416JA30bvJnIvbPcLnSyraXGlf/xGfKBHTgBNJUL5z/E3rYdZfZjLiTa2eFvXK2bu3GR
      pZqNgNfOp7/4P7g2ucrM5AQTyzFa2ztxmP915pOvKsNpxTk+uRCid7AdCbj+6//CcK2LXQEn
      VCN8cn6czh3djF87T9HUgc9u5MtP30ds28tDYTdNqTL25efcuPuA6Zk5CrqDdr+N9OII5y9c
      Z3pmmsnJOSRvFz5TnRufnUfzD+Ixi9Szi5y7PE1HT3dDf4ksn//it4xkVAZ7Oxrx2fQyF977
      vzkf1Dm6s5uFm3/g95fHWVmYZXp6CcXuo92Y4hd//yEZg5u+Nk9j4NQT/PK//J/Mi50MdXnI
      R2e5dPEqY5OTTE7NkhOddLU6ya9N8uvf/YHF5SBTU9MEswL93a2IpRjvXxxm72AvsFlWgO8A
      7sAuXnj1HXz/OoEgvxGCpQubcJFydT9GOYnmHMScT1OjCyWZRGpreUYIV53s8j2W1R6+/+5O
      zJJOraah52LcGIty4gfv0mKVqWZX+ezyddrfeoMXX9nLhRv38Lyyk+mb8+x5+eRjTFWLtxtF
      z1OsKhgtBurxRcotu+loxjEz2Ly88uaLDLU/co+3FMTXvY1aOopKHwYgtziFfdcRbCYAhQfD
      Y3QfOs1Qt5t6Mcq1z+6w2tOBC+jYfYy3Xt6HWstx+/wXrJaG6P1KS7eOQR9i/VaV/k/QqNqQ
      2PhL2koJghGrVaZYqqDGl1C6jxIgSqKik0oVaPU6nsGrUQgtRBjYuwurLCGKBsxmI8VcCpM3
      gN9mQhREzK4uWux1soUKRuc2Bn15vrx6jaJvGz1O42NlCLKFQRcspWvoukZwIUnXNv9XOERP
      /p4Gm5tOPUeoArpWYWpFYVefs5G3liSX89LV6UEUBEz2Nnb1SiyGCo+1RpTN2I0y2ld7u65t
      rQAASj3M2V/8ohEoW9dIVCX2PeOd9OoEH/wyg0kC2d3BmddO4Xf8ZahSC6JIm81CPJ+ntpqj
      95Afm8lKJFpEz+XxtjufkUOVQt5Ml+PxHlOv1TEZbRvlIGAyGKk3za9Ad4A74/c5cKTzKSFV
      BTp2beP6zXmqvkFCddjttLAca2zelUKSy3c/YNQigcHG/pdPMOQBBCNDe1v47MEa/p0SBauT
      AVljtQJUi9TNTozSRhlmq5VKtQo2SK9Oc+NGEU0pU/NuY48ZeIS2pFUzWwMAwCB38M5/eJtO
      QFcVPj//IQCSwYBaaQhWCYCqa4jNKcvTtZujf6EmEIC/3clUMEyqZuWEFcouP7VwCKWs0eN4
      kjz3OCy0+KuE1kp09ljXN8Zmq5V8IY1Gw3TQdYVssUS7yQhajfHJIENH9hJ8MEz/yZfWWbfr
      sAZolaYIRm2Ish+zcWOAGew+Tn7/qyZQM/Beyy4swzdYi/twuTsRhGCzQl5M9WmKFQ2LWQRd
      IRHL4O2zA3HMDi8eQ5G7IZ03vt/3xKpXyMS3TKBvgr17F/nJG8QLNdRyjMnVDC3uZ82efwkQ
      sLS2oS2tULFZMAJWq4tSbpK83onjmfcTJAI797Jy5xLRfBW1ViQSTmLxtuMoLHN3PoGi1Fib
      vEbG0IPXIZOcu0nOPsTuoSF22PPcXkjxJEfPQGurl8X7t7H19PMnaA03IFrxuQXmxoK09Pg3
      TqoENwF/jXv3Z6mrGomlEUYTTnYGGgPc4mpl19HTvLbbxpfX7vJVAbl0dG2TnAKpVSbv3eD+
      8Aijo0F823ux6VWwtdPqECkX6nh62mn8bDqVcgmvP4DJ6iHgKHPt0iXuT66x/7W/or/FgiAI
      RGbvcP3WCKOjo4zOhxunQJZ/HRPoifgAAJIFNR/C5B+gw2NDNIgU19awDewn4GrY59VKCZur
      FbvZQHp1mrvDDxgfHyct+Bjo7abHK3Dr6hVGpoM4A320epz09PcQHbvOjXvjZOVu3nx1P0al
      yESwxNHD2zFKEq5AB5mFOWwt7ZgMAqBRKWt42jw4TCLRrMTePT0YtDoVzUBHi4dKKsTNm7cY
      Hx9nfHyOus1Hh8tIuW6grcWBVVJI4GFvbyu6UkUx2PG7bbR29kJyji+ufUm05uTEqRdxmyR0
      pUZdMNHmdeNo6aTNlGVqTaHNa6Vc1+lqc5GMZrYcYc8Dthxh3x5bJtAWNjWey01wLpfbVNwY
      TdOo1+vPTriFJ/BcDgBJ+hcOzf4XAKPxmy/Tb+Hp2NoDbGFT4/nfA2gK8UiUitIMzlZOM7sQ
      pBlvjXIuRTLTVEFQqwQXpolkN8Lu1PJJYpkNlYRqMUUsVUIHcvEg2Uf2ntVslJn5la/NO7Q4
      Q7LUqIeuV4mE4utxyYqpNWbn1/hzGDJaLctaNI9G44QovjLLWrrceKhXia7GedjCai7C+Nwq
      yiMKCslokNLDiqhVwqGG5ItSKRBJpNfT6bpOaG6McGYj71gwtq4yUc1FmVmKomo6oJGLRchW
      H5qmVZanZ4jlyk9pgY5SzjE78YCR0QfMBWOouo5aK7MwOczwcPPfzAqqppMJL7AYTjfJiTqF
      RIRMWUHXFELz4xvpx2Yp1BS0YqL5t5FNMABQWbl3h5V8FdDJLI5x5dZN1rKNLxyau89CrNFJ
      K+kwd4evc+fW3Ppl6lxonOHF2HpuufA0IzNRdCA4eonlTPOBrrBwf5hb979kJdn4qMX4Mvem
      lgBQCgnu3r7E/dlGFBq9tMKte0EeHl7OjN/m9pUvCOWfdYH+2dDVNHevj9K4i68xceUPXJ2K
      NMotRLg2stBke2isjl7mwqV7xMobQ2/q7iXiD8e8kuf29REqQCUd4vaDmUd+2ji3z1/k8oOV
      5pm/yvy966wVGpSS5OwNzl4do6po6FqN8bvDZJoDQEsvcuHKbe5PLz9R/2o2zGeffEq0pIBe
      Jzz5gHAZavkM47PzCKKIKIrr7NvQyFXOfTlMoaYCGuGxO8wly+j1KpOTD6hpzfRNNrASm+Da
      bBpRFDbBABCN9PcYWQ6XQK+zlBTYtz1AIZUCNDLJDL7WhuhJIh6mdeA1bOo8uZL6zfl+BWq1
      xEpd4MUdvcQjjfChbq+XXK4RAC6bK9A6eAg5OkdFg+LyPIb+ARo+qQLJpJHDR7oILsb+2aGS
      RGMndnOMUlkFJUTddxRPJkYZyMbi2Nt9mACqcWZS7fzoJRuTwcIzcn0S+blhzCf+mo70EvEq
      IFgJdJuJRHLoVAgn7bzYLhKpKWjVKmlJpMUkAxorU0H2njxKLRrnqzreK9PDWAaPc+KFQxw4
      cJhX33qdLqsACDj93ezbt5/9+/ezf3s3kihgsLg51C5wZzbxhPPN7PIztKeZfvcAdqMBEPB1
      bWf//v2bYAAg4Onto7QUpFyrURR0enw+krkU1KMkiu20uiSgRiQYJ9Dbhd9hJZrZkEJJhxaa
      DppxZpeiPO18qZwLIcoBerrbScYaJoPB5aW1kCaiQD4bw+EdxGDKUSqXmF+ss2Nbw6tcXRmh
      3HGA7kAfhcQi2p8g6PSNECWcVhvZYonS4jzy9iN02xOEMhrRVJF2X0NDJBUKYewM0L1jJ7XZ
      KQrNMa+U8yxMN9o7PjlDsvAUH4NaZHRa5cBQF73dEkvBNDrgbOuiGA6h5mLEbQEO9RtYDJao
      VjLIkgdZFtHqFeYLOgOdPex0pJmOPWr4KaTiWTq72qBWYH5mkvHxafL1xqqSj6+uf4vp5Wjz
      txJo2fMC8uo9wrnHjchqNs70ZLMtcytU649Gw9Q3wwAAwdGJW1klkcuB7sDjd1HJlijH1qi1
      B7CLoOWCLBU9OA01fC6ZuZX4+kysKnWq1SrVapVa/WndXye+MI2htQ3VYMOdX2Ulr4Foo6e9
      QjBaJpso4/E7cZisFDMJVjQH3VYB9CrTo2sEehzoooF6KklG+eeZQYIg0OY0E8tmWFxW6e+2
      4e7wko1myBbzuBx2AEKhKE6bmZLixCquEc00Orqua9Rr1Waba6jak/WpZpOEJSOOWgnZ7iUR
      XAJdx2LzUqslSceyuFsc2Lt7UYMh8pkwoiuALArUynFKJQlUFXfAw8rkRozmBiO00QZ0jVqt
      zOz1Syw1TTJNVag98i3WXxPtDPT6WFhcfWwF1TSV2sO21Jr6qrrK1PWP+PnPf/58HoM+CSue
      Fom12QnwHka22ulWh7mzYKJ72wACGqszixTLcb44HwcU8oU0iSPbEYCW3p0cPtQHQHyuynDi
      K9lXE4zO5albr3BuGpRqhtLkGv0vdtE20Mf46C1EOthtFbG4ZYZXY5i8DkyAUsgwk8sjXP+U
      ZQHqmTVGVkqcGXT8M9or0N7Vwq17yyRlOz80QsEVoLw4i5KXcTkbtMjlmUXysTLBCShlS+hr
      UQZ8PchWF/37DtPrarRtdeX+EyUkY4sUImHOnzsHWpVQ1kb51EGsNgdiucpiOkNLoBeMdryG
      Mebn6/gPHEUAMvMjrKZrXPrsHLqqkCNPsboNl1kEZDwtdlZXowzsbWdo7z6Upbn1drna+zh0
      +PBXaNQNdAzsYPbTq4RFeMhZtXja2XfgMI5HSIs1QWLX8bd5syO+WQYAeN1eLl8b4+i/O4OA
      SFeXyLnrBX52wIyuKiwkKrz+Vz+my2MGNKa//ITl1Sx9f0LemXAIuf8Q776yFwGoFSJ8dnmC
      cr0To6sHdf6/Ib36PyMj4A60ELx9m8F9xxrvJtdw9r7Mm8eHEAQBrTDHHy5OUtr2ItZ/xvps
      8AWwrN2lMrQfAbBabZQjY5Qdp3AYdGqhcWoDb/FvTw1iEKCamOXjexGUfT3PzlyvE15Jcuyv
      /5ZdLTLodWYvfcR4tMbRdiuDjjrXQmW+N+QARGzOOiPDMn9zRkJXskwtSbz7d/+GTpOArtW5
      e+EzorkSLnNjZerdcZDZzy9zXdmN16QTymsMSoCiU0iFmZ6ebgwAs4vB7rb1aglGFwf2B/jV
      L69wcO8pAKr5JPOz01hkQLLQ3buhhOft3b9JyHCAyWLB4mqnt8uHATDYXLicbrrafUgiGK02
      Wr3e5v1fAavTjVk24XK7cDrdOJpCr5Jswely4bAaMVqdON0ejKJIa5sfu7mRRpTM2B1mHHY7
      ssGE2e6ip7cLm1FCMFpxGc109HZjMxnQdQGvvx2bpaFaJhiduCxgczSiUX5rCEYcLjNtHb24
      rCZEg4xFttDR34/bIlGr6/i7unA2FeUMJhsOkwmry47d5sTl8jR49oKIzenE7XJgMBhxOl04
      bUYEg4+OdneD0SlIuLxuEC24rDI2lwWLI0Cn34UkgMVkw9neSZfPAaqG4Gqly2tvtFcQcTpt
      GMx2bKZG1zRYnPT1tJFLJihVddp27GWb3964l1wvkys2TRpdJtDqwWS1Y3c6MYkCRpsXr8dG
      WyCAzWhA0hVyhVIjfR28rT7MZhtOlwu3zbTlCNvC5sam2ARvYQtfh+dyD7DZokRu4dtjywR6
      DrB1H+DbY8sE2sKmxvM/ANQaU6Nj5GoNB5aaXuL8pZs0fT6k1+aZbQaDoJbn1sV/ZHT1EVpA
      IcLNycYl7PTqLHNrqY2sq0VGxsaprUfbyDJ2c4YyGrHZOaLlRiFqPsSt+/NUlAJj9yeoqE/m
      /WeFrjF39zMujaxsOIX0Oisj1/js2hilh768SoprX3zOfOwhIU0jPjdB8BGGX3R5kmCyDOSZ
      ujPLo8GT9NIaH529QDS/YW5WC3EunX2f2YQCSpnRa+d4//33m/8+JVKpUw5P8LtPb1KqbXhl
      c7E5zv3+E6LNrNRykiuf/IHf/u5DvpwIouk6oBKZvMlv3n+f3/zmt3x6Y2yd5FiJzTK+mtuo
      RzbC5U/PE1mvsEZ4eopw/nHy3fM/AEQR4ksspGuARnh+mXw5RqwZRC2yMkNJb9zlzSbWSOoC
      ofsjrFOBKhlmgg3PVzERJpza0NXQlSpLwWCT7QhQYmVmjRo6uXCYbK2Oplb48vKXWP2tGLQK
      wcUg9YeO1UqamdWvetX+DNB1cvUaxbkJopVG3ZRSlslUATW6uh5RJrm6TEGHlem5pidWJxcJ
      kixu0AkysRDJQg2oEJpf41FDS69lKGQLzIWSG+nDc2QyaeJFDdQ6KVz88N0f85Of/ISf/OR1
      2kwG1HKSYiLB4nosMp3w8gy5dIZsHer5CB9/9Dlth87wzg/OYIvc4sJoDBWNTCjKzjM/4sd/
      /Q57nFE+vTpHHahnw+skRIDo6jK6UGFiKtzkB+mk10Kky49TJZ7/ASBIdPe5CK1m0LU6oYqB
      XYF28tkUUCOTquH1NvyGydgaLZ2HcVgy5Iq1b873T4Gukpi5R8azmx3tzxKj+jNDsNHRbSEc
      atBVC9kEdmcr0iNfPJxM0de7E72efpwj80+Ap7uTWihMUQO0CuHVEoHeR0K3CgKiKCJJ0rpu
      J0h0D7QRWoyi6KArKWJpGx3+hixBOhrC1HWAHW12jGYHe189Q33xLrnm6BNFEclgJDB0AEch
      xZO7H4VEPEnXnhcRMgtUlK/f5j7/AwABW3cvBIMUqnXqgkag1UMqn4XyGnG1k1a7CBSJBEt0
      9vhpd1hYS+aemfM3I8vVs7/hw9tZXn1pCKP0Ly+c62npJJtohDVNR4K4A92PDMICqYSOv7ON
      dqnKauHb3UQQzH667WlWUzWU3BpxY4AOy0YplegsH/3h93zwwQd88PE1sk1T1ODrx1taJFnR
      KYWWUAJ9uJoX+UrFPA6vd6MM2YPdVqVa3eBh6VqdtakJtLZOHlESaqC4SqTeSZffg5kKufLX
      T2bP5THoEzAG8FruEY570PDjaPUiPpgmHspi7u3HBFTXZnmQKCE8uIOWijMdX2ZffwvfXujE
      yUtv7Cdz5z7z4RwHOv/l9YRsHi/C7Ci5apxg2sORQyYizWeV4BhTmRqWB6MopQTBsVUGT/Z/
      i1JEfF1djC8vYzFn6ejuRYpuPDW1buOVQ4cxGgQQRGRZau4jTLR2OIisRpASZQaHXGRWG+/I
      spH6Y8fYCkqtoWgNZa6e/RVX0nHajnyPHx7r+kon1ghNTZCu2BgbfkA+GWIimKV991MCirMp
      VgAAAy6PnfD0JHJ7J5LsoteS4uZcha52G4KusbwQY2BoAI/Tia9/Dx3VFSKFb2ZlSgYZo6qQ
      LTX0LsvRGFWfuzkjCchWL0dPvcTKrYtEchUE0YZkKFAo19B1nUQiuc7M/G6abWeXX+HWnWXk
      zg5sDydmvcbsdJo9B7bhdjppGdyPMztPuiLg9BhJJXIomo6mlMkVKtitT8yxj8HhaqGUSxDP
      5Wl1Px7mVRAlZKMRk8mEySg/JiHf4mslFl0lrwl4HinD4fGRjixTrqvomkoxPEFO7MFhEQEL
      J97+KT/98fcw5EPN336jPF2pMp/S2dPfhtPpon/PDorLK5S+5lNujhUA8LldXPtyke+fbHBQ
      2rps/OrjJMdOmNHUGsu5Mgde3beu72mqRFhZSdDtfzSXGlM3Pyc+40R2tfPKy0d5caiN83/8
      EKNRolKFo2/8gEfVEo2ONk690MPVG/c5eeYlhvpa+eLjD5ANBmqqzPE3j3yHrRbw7x5i5b9d
      5MzfDEHz/plSzrGimnh91w7MTcJRLblGNJ5j9/aDSOcvcnbRgKhWsXUeYP8z9B8NNjc9Yoyx
      ch97HTLJR55VYvN88sdok2Pl5KW3jq8rU9t8foy3blIOnMT6iEyi09/L7pY1/vGjP2KSNGqK
      gZfe/D4WsdmLBQFvzy5Om0QuXbnKoeOv8HB9rZXSVHQXLw7txCwJQD+5yCdEMnWgwL2LnzJv
      NWJv6+flQ3s3jyNMUxWqNRWTxdTQtdTqVKoaJnNDJa1er2OQN2YoTa2j6iKyCFVVxyQb0JQa
      lWqTUy5KmE0mJEGnWqmgaDqiwYjZaEAQQK0rIBmaQSk0ajUFg1FG0DWq1WojSINswiRLTxGS
      /afhCUeYrqOoCqJkQECnVq0jG42IYkPgVjIYUFQV2WBYL1tV6uiChEESUZUa1ZoCCBjNZgxi
      Q92tXlWRTPK62aBrKoomIBsENKVOXZcwyg1VNlWQkUWo1SrU1+83iJitZkRNQcGALIFSq6FL
      MrIkoNTqCLIRSQBdV6lWqmh6I4Sr0SA1f9c6uiQ366RTr9YQDDISKnVdQhZ1FEXHIBvWJRSV
      eg1BkkFttEsHREnGZDJungHwPGPLE/ztsUn2AFvYwtPxXO4BNiMZbmsh/3bYMoG2sKmxZQJt
      YVPj+b8SqVa4dfEKQlsnDqNEZeUev/j4Fv6+HTiMAqtTt5hNGgi02FELUf74+1+yUg3Q19Gk
      LqTn+eBOmKFeP5GJ63zw0WVcg3twm0RAJzN9g//r95fwBQbwCSF+/t8/4MHEGKOjoyyGi3T0
      dmOWIB+d58P/7x+oBQ7RYf+OtUs1lZG7NzA4A1hkgfm7F5jNW+lqsYOS4uNf/Y75spltAR+C
      AIWFa3wRsjDgb1BC1qbuMh3XCbQ6AY3o/fP89y/m2L6tH4vcmDNnbn9CROxcPzYuzF/mathB
      n9/SOFVLLXD+7irbemx88l//X66OTTE2OsrkcgyHucanZz/h1q3rXLp+m7mZKWKam27jKv/P
      f/0Dk9PjjI6OspYX6fJbuPzBr/ni3ihjD8ZZWMvQ3t2NpRldIzJzk99/cAn3rr24ZAHqJS59
      9B4TaTf9XR5EAca//JissRuPocTda59x8epNRsemyev253MP8BgkmVZTkdV0jYBVIhQq4G83
      k0sVCNgdZBJRzNv2ApBJxjB37EYNjVPc145DFkCtU2i60pWakY4+G8GFKL37A6BVmV4uMtBp
      bxz1aXW8u07yzsnBJ6qRjIboGNrJ2sQCe9t2In/HzIhqtYKq6aj5JUZW4PQPWgAoRlap+3sR
      MyHq6iAmg4heL1N+hJmp1CpUtAbtQFcKTAVVhlplIvkiHmvjxL1eKT3CggV7Vz+FP45T3HUC
      uyQQDa1hd/UgoeFo3cuJd17lUV94738YIrc6xpXFGj989TAAtcQIfUf/iu+91LmRsJ6hrLfw
      k599H4dWZ+3OOa5MJnj3oB/QCUdT9A14WFpI0r2nFUHXwd2FITHOaiZAn8dErVICVSc5d5ew
      vJ1/+3eDCPUiiUxtM5hAEl0D7YQWY6hqjbAqstvfTjobB4qkkgZafQ3XTCy8gr9vP26HQvqp
      mpXg9g9QTi+haDr1Uo68bKX1mZFhyoSDWfr2ncBanyNf+XbEs38qlEqGSxfu8MIbZ/A2Yxgv
      ryYY2D5IFxWCf4L6XSkRpeANcHynl4XFJ5XX1mHqxmdPkGrqqoZiSTrbW/9MLWlAlIx09Laj
      V5rcHiVBLG1hx/6DVKKz1B+yckULO3d0MTM9/3gV7VYKkWXWkkUMZgcd7b5NsAIAsr8P+40H
      pMseQKKlzc3UVBY1vUrK1o3XBNTjhKJWjrxgp5y2MhfN0ON7Mpqu0ebAGYqSqKqY0kFMrl7k
      Qmb9+erw57y3fAMAT8d+zrxxADk+T8w2wFGHkZTZQDRTwGtxfadtriUW+XB0AefAQV53Plxu
      asRTeXbta8U+6ODiVJRtL3Z9Yz6xWAR/y3YsHSYsd26RqPbj/5oYYwGPm7V4kh6HRLroZshj
      BurEl+/ym/eWkAGrr4vTp0/jfVqcPl1l8upZYjM2QCCw8xivHvKBUmBxbg6rViM0l2T/iQOA
      Tm5hHHp30+K0IlZzZKsKrc0e7enqx7N4g/nc9vXsHd2HOFmb5N7ls9zAzeHjxzbHAEDy4nbl
      iEaCqHIHVrcHW26FYBjc3bswoFNYnWd4/gFrv1xFK6XIO3VeHAo8yTSULAx1S9xeTtEVS9Jx
      6CC54ZH1x10HX3/cBNI1FuZmmB+N88vgXYrJMG5xG7s6XN8pPdrY0s+Pju1n7sYlZhIH2OEz
      QnaW23dnmU/8A7KWJ6PmyB7sxIDQiM0L63VqKLPVmB+9w0RxjqnbBpLJJK7wMfx9Tyf2dfa0
      MzwWIyul0Xv24Wja6a29R3jjKybQUyFIDJ145wkTCK1GMrzAjfuzHHn3Z/Q5ZXStytT4HFPx
      JWKjAqnVNeSdxznZLTWzsrP7UBdX7k3h1cAIIMgEBg8QGNxHanWUS1fubJIBgIjb62FuZJS2
      E3+LKMkMtGQ4P2bhtTetoKtMz6d5+3/6j+xqcwJ17p0/y1Kyzq6n5ObasR/t/Y8ZazvIj50S
      I09J8xCaUmM+I/Oz//Sf8DuMUI9z7ux9kvXttHzHMfUMZjcnv3+SD377R+w/fIvy/WlO/i//
      Oy92NPSL7l46SySeZ6ijn/L5MRI7ffiMFRaCMfwH96Ok58j7TvO//uwgJiC1PMqt4DL0PT2K
      srG1l0D+Hzl338rLP3T/+Qa40csLr77FS0Pb+PTCRTo8P6RNzBA2b+N/+8+nMRoE9NwMH1ye
      odo1tP6atWUHHvVzQtkyO4BcfJWcZifgd2O1O5CEyGYZANDS0sLwZJqjrY1e5+nuRp2P4zWb
      0FSVutlCh/OhoJ5M50Afa+kMtFrwuRqf0mi1YTHKIHnoaLFh6WxFAqwOF0ajBJKZwvzFdRPI
      0TrAq68MYrEGcFqbvV32MdBnJJOp0tL6HQUZFsBud2KQBDD6ee1YHyOT0wi08ULrxifv7uoh
      VC5CoJfjuyJ8cfZ9KqpI7/5jDLbbSM/k6BnauU7uc7V0IK+soAIWhweD/JUtpGChd5uHsXkL
      7aaHJ10Slew0v3tvCQmQXe2cfu012pwyktGC65Hg4oJkYm34HO9q1D67AAAAWElEQVTNNP7W
      0n+Q14724fK6kAB7ywBvvS5x484dtEE3/ra+RhsBwdFHn+squYqAw+FAFAUESebAnn5mLxWw
      yCKyqDNz7SJfZIvIVh8Hjh/bcoRtYXPj/wcNXb+bssdCFgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trends' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Yelp Overall Correlation' width='192'>
      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
      H0LLa5n+8l/LAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
