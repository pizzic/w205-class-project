<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1103.2343                               -->
<workbook source-build='10.1.1 (10100.16.1103.2343)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='master (medicare.master) (medicare)' inline='true' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='54.164.115.109' name='hadoophive.1q9f8c01g88bng15qjhl50pbfpaz'>
            <connection authentication='yes' authentication-type='2' class='hadoophive' connection-type='2' dbname='' odbc-connect-string-extras='' one-time-sql='' port='10000' schema='medicare' server='54.164.115.109' sslcert='' sslmode='' tablename='' username='root'>
              <connection-customization class='hadoophive' enabled='false' version='10.1'>
                <vendor name='hadoophive' />
                <driver name='hadoophive' />
                <customizations>
                  <customization name='CAP_AUTH_DB_IMPERSONATE' value='yes' />
                  <customization name='CAP_AUTH_KERBEROS_IMPERSONATE' value='yes' />
                  <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
                  <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
                  <customization name='CAP_FAST_METADATA' value='no' />
                  <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='no' />
                  <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
                  <customization name='CAP_INSERT_TEMP_EXEC_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
                  <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
                  <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='no' />
                  <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
                  <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
                  <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
                  <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
                  <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
                  <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
                  <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='no' />
                  <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
                  <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
                  <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
                  <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
                  <customization name='CAP_ODBC_UNBIND_EACH' value='no' />
                  <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
                  <customization name='CAP_QUERY_ALWAYS_USE_AQ_CACHE' value='no' />
                  <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
                  <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
                  <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='no' />
                  <customization name='CAP_QUERY_EMPTY_DOMAIN_TOP' value='no' />
                  <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='no' />
                  <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
                  <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
                  <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='no' />
                  <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
                  <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
                  <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='no' />
                  <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
                  <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
                  <customization name='CAP_QUERY_SORT_BY' value='yes' />
                  <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
                  <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
                  <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
                  <customization name='CAP_QUERY_SUPPRESS_CHECK_DOMAIN_LITERALS_THRESHOLD' value='no' />
                  <customization name='CAP_QUERY_SUPPRESS_NULL_CHECK_QUERIES' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
                  <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
                  <customization name='CAP_QUERY_TOP_N' value='yes' />
                  <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='yes' />
                  <customization name='CAP_QUERY_USE_QUERY_FUSION' value='yes' />
                  <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
                  <customization name='CAP_SELECT_INTO' value='no' />
                  <customization name='CAP_SELECT_TOP_INTO' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
                  <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
                  <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
                  <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
                  <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
                </customizations>
              </connection-customization>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='hadoophive.1q9f8c01g88bng15qjhl50pbfpaz' name='master' table='[medicare].[master]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>providerid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[providerid]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>providerid</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hospitalname]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>hospitalname</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitaloverallrating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hospitaloverallrating]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>hospitaloverallrating</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mortalitynationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mortalitynationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>mortalitynationalcomparison</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>safetyofcarenationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[safetyofcarenationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>safetyofcarenationalcomparison</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>readmissionnationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[readmissionnationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>readmissionnationalcomparison</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>patientexperiencenationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[patientexperiencenationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>patientexperiencenationalcomparison</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>effectivenessofcarenationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[effectivenessofcarenationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>effectivenessofcarenationalcomparison</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timelinessofcarenationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timelinessofcarenationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>timelinessofcarenationalcomparison</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>efficientuseofmedicalimagingnationalcomparison</remote-name>
            <remote-type>129</remote-type>
            <local-name>[efficientuseofmedicalimagingnationalcomparison]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>efficientuseofmedicalimagingnationalcomparison</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>averageeffectivecarescore</remote-name>
            <remote-type>129</remote-type>
            <local-name>[averageeffectivecarescore]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>averageeffectivecarescore</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>averagereadmissionscore</remote-name>
            <remote-type>129</remote-type>
            <local-name>[averagereadmissionscore]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>averagereadmissionscore</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mortalitycomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mortalitycomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>mortalitycomp</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>safetyofcarecomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[safetyofcarecomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>safetyofcarecomp</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>readmissioncomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[readmissioncomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>readmissioncomp</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>patientexperiencecomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[patientexperiencecomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>patientexperiencecomp</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>effectivenessofcarecomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[effectivenessofcarecomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>effectivenessofcarecomp</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timelinessofcarecomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timelinessofcarecomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>timelinessofcarecomp</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>efficientuseofmedicalimagingcomp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[efficientuseofmedicalimagingcomp]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>efficientuseofmedicalimagingcomp</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>safetygrade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[safetygrade]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>safetygrade</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yelprating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[yelprating]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>yelprating</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>safetygradenumeric</remote-name>
            <remote-type>129</remote-type>
            <local-name>[safetygradenumeric]</local-name>
            <parent-name>[master]</parent-name>
            <remote-alias>safetygradenumeric</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[ctd:safetygradenumeric:qk]&quot;' value='Safety Grade' />
          <alias key='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:hospitaloverallrating:qk]&quot;' value='Overall Rating' />
        </aliases>
      </column>
      <column caption='Total Comparison' datatype='real' name='[Calculation_872572449718501401]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL([mortalitycomp],0)+&#13;&#10;IFNULL([safetyofcarecomp],0)+&#13;&#10;IFNULL([readmissioncomp],0)+&#13;&#10;IFNULL([patientexperiencecomp],0)+&#13;&#10;IFNULL([effectivenessofcarecomp],0)+&#13;&#10;IFNULL([efficientuseofmedicalimagingcomp],0)+&#13;&#10;IFNULL([timelinessofcarecomp],0 )+&#13;&#10;IFNULL([safetyofcarecomp],0)' />
      </column>
      <column caption='Meta Score' datatype='real' name='[Calculation_872572449719549979]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_872572449718501401] +&#13;&#10;IFNULL([yelprating],0) +&#13;&#10;IFNULl([safetygradenumeric],0) +&#13;&#10;IFNULL([hospitaloverallrating],0)' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='Averageeffectivecarescore' datatype='real' datatype-customized='true' name='[averageeffectivecarescore]' role='measure' type='quantitative' />
      <column caption='Averagereadmissionscore' datatype='real' datatype-customized='true' name='[averagereadmissionscore]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='real' datatype-customized='true' name='[effectivenessofcarecomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Effectivenessofcarenationalcomparison' datatype='string' name='[effectivenessofcarenationalcomparison]' role='dimension' type='nominal' />
      <column datatype='integer' datatype-customized='true' name='[efficientuseofmedicalimagingcomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Efficientuseofmedicalimagingnationalcomparison' datatype='string' name='[efficientuseofmedicalimagingnationalcomparison]' role='dimension' type='nominal' />
      <column caption='Hospitalname' datatype='string' name='[hospitalname]' role='dimension' type='nominal' />
      <column caption='Hospital Overall Rating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
      <column datatype='real' datatype-customized='true' name='[mortalitycomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Mortalitynationalcomparison' datatype='string' datatype-customized='true' name='[mortalitynationalcomparison]' role='dimension' type='nominal' />
      <column datatype='real' datatype-customized='true' name='[patientexperiencecomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Patientexperiencenationalcomparison' datatype='string' name='[patientexperiencenationalcomparison]' role='dimension' type='nominal' />
      <column caption='Providerid' datatype='string' name='[providerid]' role='dimension' type='nominal' />
      <column datatype='real' datatype-customized='true' name='[readmissioncomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Readmissionnationalcomparison' datatype='string' name='[readmissionnationalcomparison]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Safety Grade' datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[safetygrade]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[safetygradenumeric]' role='measure' type='quantitative' />
      <column datatype='integer' datatype-customized='true' name='[safetyofcarecomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Safetyofcarenationalcomparison' datatype='string' name='[safetyofcarenationalcomparison]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='real' datatype-customized='true' name='[timelinessofcarecomp]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Timelinessofcarenationalcomparison' datatype='string' name='[timelinessofcarenationalcomparison]' role='dimension' type='nominal' />
      <column caption='Yelp Rating' datatype='real' datatype-customized='true' name='[yelprating]' role='measure' type='quantitative' />
      <column caption='Zipcode' datatype='string' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column-instance column='[hospitaloverallrating]' derivation='Avg' name='[avg:hospitaloverallrating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[hospitaloverallrating]' derivation='Avg' name='[avg:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospitaloverallrating]' derivation='Count' name='[cnt:hospitaloverallrating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[hospitaloverallrating]' derivation='Count' name='[cnt:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospitaloverallrating]' derivation='CountD' name='[ctd:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[safetygradenumeric]' derivation='CountD' name='[ctd:safetygradenumeric:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospitaloverallrating]' derivation='Max' name='[max:hospitaloverallrating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[hospitaloverallrating]' derivation='Max' name='[max:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospitaloverallrating]' derivation='Median' name='[med:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[safetygrade]' derivation='None' name='[none:safetygrade:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[hospitaloverallrating]' derivation='Sum' name='[sum:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Ashton Chevallier\Documents\My Tableau Repository\Datasources\master (medicare.master) (medicare).tde' schema='Extract' tablename='Extract' update-time='12/15/2016 06:36:26 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_872572449718501401]' formula='IFNULL([mortalitycomp],0)+&#13;&#10;IFNULL([safetyofcarecomp],0)+&#13;&#10;IFNULL([readmissioncomp],0)+&#13;&#10;IFNULL([patientexperiencecomp],0)+&#13;&#10;IFNULL([effectivenessofcarecomp],0)+&#13;&#10;IFNULL([efficientuseofmedicalimagingcomp],0)+&#13;&#10;IFNULL([timelinessofcarecomp],0 )+&#13;&#10;IFNULL([safetyofcarecomp],0)' />
            <calculation column='[Calculation_872572449719549979]' formula='[Calculation_872572449718501401] +&#13;&#10;IFNULL([yelprating],0) +&#13;&#10;IFNULl([safetygradenumeric],0) +&#13;&#10;IFNULL([hospitaloverallrating],0)' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4281' timestamp-start='2016-12-15 06:36:26.261' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_872572449718501401</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Calculation_872572449718501401]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_872572449718501401</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1023.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.23896285914505958</statistic>
                <statistic aggregation='Min' datatype='real'>-7.0</statistic>
                <statistic aggregation='Max' datatype='real'>7.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.0832297105435256</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.0829863852246393</statistic>
                <statistic aggregation='Var' datatype='real'>4.3398460268912622</statistic>
                <statistic aggregation='VarP' datatype='real'>4.338832281031209</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18819.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_872572449719549979</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Calculation_872572449719549979]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_872572449719549979</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>19763.75</statistic>
                <statistic aggregation='Avg' datatype='real'>4.616619948610138</statistic>
                <statistic aggregation='Min' datatype='real'>-5.0</statistic>
                <statistic aggregation='Max' datatype='real'>18.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.8998626560604248</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.8994071444480483</statistic>
                <statistic aggregation='Var' datatype='real'>15.20892873613467</statistic>
                <statistic aggregation='VarP' datatype='real'>15.205376078172481</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>156335.9375</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4281.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4281.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[address]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>address</remote-alias>
              <ordinal>3</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4255</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; CALLE CONCEPCION VERA AYALA \#550 S&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WHITEHORSE PIKE AND TOWNSEND AVENUE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>averageeffectivecarescore</remote-name>
              <remote-type>5</remote-type>
              <local-name>[averageeffectivecarescore]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>averageeffectivecarescore</remote-alias>
              <ordinal>4</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2935</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>364490.28176018398</statistic>
                <statistic aggregation='Avg' datatype='real'>85.141387937440783</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>200.08333333333331</statistic>
                <statistic aggregation='Stdev' datatype='real'>15.043252851635742</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.041495770177709</statistic>
                <statistic aggregation='Var' datatype='real'>226.29945635824689</statistic>
                <statistic aggregation='VarP' datatype='real'>226.24659500427393</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>32001770.151984215</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>averagereadmissionscore</remote-name>
              <remote-type>5</remote-type>
              <local-name>[averagereadmissionscore]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>averagereadmissionscore</remote-alias>
              <ordinal>5</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2020</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>62725.122049339552</statistic>
                <statistic aggregation='Avg' datatype='real'>14.651978988399803</statistic>
                <statistic aggregation='Min' datatype='real'>4.2999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>19.450000000000006</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.4259232387886398</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.4257566881557306</statistic>
                <statistic aggregation='Var' datatype='real'>2.0332570829174843</statistic>
                <statistic aggregation='VarP' datatype='real'>2.0327821338207972</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>927749.51062662306</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>6</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2684</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABBEVILLE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZUNI&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>effectivenessofcarecomp</remote-name>
              <remote-type>4</remote-type>
              <local-name>[effectivenessofcarecomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>effectivenessofcarecomp</remote-alias>
              <ordinal>7</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>498.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.13632630714481248</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.62533879077071086</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.62525319241417121</statistic>
                <statistic aggregation='Var' datatype='real'>0.39104860324257484</statistic>
                <statistic aggregation='VarP' datatype='real'>0.39094155462411262</statistic>
                <statistic aggregation='Count' datatype='integer'>3653</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1496.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>effectivenessofcarenationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[effectivenessofcarenationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>effectivenessofcarenationalcomparison</remote-alias>
              <ordinal>8</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Same as the National average&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>efficientuseofmedicalimagingcomp</remote-name>
              <remote-type>16</remote-type>
              <local-name>[efficientuseofmedicalimagingcomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>efficientuseofmedicalimagingcomp</remote-alias>
              <ordinal>9</ordinal>
              <family>master</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-14.0</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.0050323508267433505</statistic>
                <statistic aggregation='Min' datatype='integer'>-1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.51301982156690729</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.51292760986101871</statistic>
                <statistic aggregation='Var' datatype='real'>0.26318933732054139</statistic>
                <statistic aggregation='VarP' datatype='real'>0.26309473295773744</statistic>
                <statistic aggregation='Count' datatype='integer'>2782</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>732.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>efficientuseofmedicalimagingnationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[efficientuseofmedicalimagingnationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>efficientuseofmedicalimagingnationalcomparison</remote-alias>
              <ordinal>10</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hospitalname</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hospitalname]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hospitalname</remote-alias>
              <ordinal>11</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4109</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABBEVILLE AREA MEDICAL CENTER&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZUNI COMPREHENSIVE COMMUNITY HEALTH CENTER&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hospitaloverallrating</remote-name>
              <remote-type>16</remote-type>
              <local-name>[hospitaloverallrating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hospitaloverallrating</remote-alias>
              <ordinal>12</ordinal>
              <family>master</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11160.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.0718414533443434</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.83531783576690743</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.83520286531205601</statistic>
                <statistic aggregation='Var' datatype='real'>0.69775588675031008</statistic>
                <statistic aggregation='VarP' datatype='real'>0.69756382622546831</statistic>
                <statistic aggregation='Count' datatype='integer'>3633</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>36816.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mortalitycomp</remote-name>
              <remote-type>4</remote-type>
              <local-name>[mortalitycomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mortalitycomp</remote-alias>
              <ordinal>13</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>59.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.017106407654392579</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.46451541560075249</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.46444807012513928</statistic>
                <statistic aggregation='Var' datatype='real'>0.2157745713307398</statistic>
                <statistic aggregation='VarP' datatype='real'>0.21571200984296632</statistic>
                <statistic aggregation='Count' datatype='integer'>3449</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>745.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mortalitynationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[mortalitynationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mortalitynationalcomparison</remote-alias>
              <ordinal>14</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>patientexperiencecomp</remote-name>
              <remote-type>4</remote-type>
              <local-name>[patientexperiencecomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>patientexperiencecomp</remote-alias>
              <ordinal>15</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>88.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.025581395348837209</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.81490706252983647</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.81478860812663356</statistic>
                <statistic aggregation='Var' datatype='real'>0.66407352056100677</statistic>
                <statistic aggregation='VarP' datatype='real'>0.66388047593293675</statistic>
                <statistic aggregation='Count' datatype='integer'>3440</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2286.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>patientexperiencenationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[patientexperiencenationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>patientexperiencenationalcomparison</remote-alias>
              <ordinal>16</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>providerid</remote-name>
              <remote-type>129</remote-type>
              <local-name>[providerid]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>providerid</remote-alias>
              <ordinal>17</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4281</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;100001&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;90011&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>readmissioncomp</remote-name>
              <remote-type>4</remote-type>
              <local-name>[readmissioncomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>readmissioncomp</remote-alias>
              <ordinal>18</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-58.0</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.015437849347883949</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.66861495227301126</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.66852596379158002</statistic>
                <statistic aggregation='Var' datatype='real'>0.44704595440304118</statistic>
                <statistic aggregation='VarP' datatype='real'>0.44692696426346096</statistic>
                <statistic aggregation='Count' datatype='integer'>3757</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1680.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>readmissionnationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[readmissionnationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>readmissionnationalcomparison</remote-alias>
              <ordinal>19</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>safetygrade</remote-name>
              <remote-type>129</remote-type>
              <local-name>[safetygrade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>safetygrade</remote-alias>
              <ordinal>20</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;F&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>safetygradenumeric</remote-name>
              <remote-type>16</remote-type>
              <local-name>[safetygradenumeric]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>safetygradenumeric</remote-alias>
              <ordinal>21</ordinal>
              <family>master</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7303.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.837624802942722</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.97141751015048738</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.97116224342419055</statistic>
                <statistic aggregation='Var' datatype='real'>0.94365197902697218</statistic>
                <statistic aggregation='VarP' datatype='real'>0.94315610305270681</statistic>
                <statistic aggregation='Count' datatype='integer'>1903</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>29821.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>safetyofcarecomp</remote-name>
              <remote-type>16</remote-type>
              <local-name>[safetyofcarecomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>safetyofcarecomp</remote-alias>
              <ordinal>22</ordinal>
              <family>master</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>132.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.045454545454545456</statistic>
                <statistic aggregation='Min' datatype='integer'>-1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.71208262185743632</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.71196000754368061</statistic>
                <statistic aggregation='Var' datatype='real'>0.50706166035136069</statistic>
                <statistic aggregation='VarP' datatype='real'>0.50688705234159781</statistic>
                <statistic aggregation='Count' datatype='integer'>2904</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1478.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>safetyofcarenationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[safetyofcarenationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>safetyofcarenationalcomparison</remote-alias>
              <ordinal>23</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>24</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timelinessofcarecomp</remote-name>
              <remote-type>4</remote-type>
              <local-name>[timelinessofcarecomp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timelinessofcarecomp</remote-alias>
              <ordinal>25</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>186.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.053913043478260869</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.75805755300736344</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.75794768163161319</statistic>
                <statistic aggregation='Var' datatype='real'>0.5746512536715116</statistic>
                <statistic aggregation='VarP' datatype='real'>0.57448468809073727</statistic>
                <statistic aggregation='Count' datatype='integer'>3450</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1992.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timelinessofcarenationalcomparison</remote-name>
              <remote-type>129</remote-type>
              <local-name>[timelinessofcarenationalcomparison]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timelinessofcarenationalcomparison</remote-alias>
              <ordinal>26</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above the National average&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Same as the National average&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>yelprating</remote-name>
              <remote-type>4</remote-type>
              <local-name>[yelprating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>yelprating</remote-alias>
              <ordinal>27</ordinal>
              <family>master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>277.75</statistic>
                <statistic aggregation='Avg' datatype='real'>2.8634020618556701</statistic>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>5.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.7577899425824004</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.75387368927240861</statistic>
                <statistic aggregation='Var' datatype='real'>0.57424559707903777</statistic>
                <statistic aggregation='VarP' datatype='real'>0.5683255393771921</statistic>
                <statistic aggregation='Count' datatype='integer'>97</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>850.4375</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>zipcode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[zipcode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>zipcode</remote-alias>
              <ordinal>28</ordinal>
              <family>master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3994</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10003&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99901&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.321429' measure-ordering='alphabetic' measure-percentage='0.678571' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:hospitaloverallrating:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[ctd:hospitaloverallrating:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:hospitaloverallrating:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[med:hospitaloverallrating:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:Calculation_872572449716809736:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:Calculation_872572449716928521:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449717080074:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:hospitaloverallrating:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[cnt:hospitaloverallrating:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:hospitaloverallrating:ok]' type='palette'>
            <map to='#499894'>
              <bucket>12</bucket>
            </map>
            <map to='#499894'>
              <bucket>67</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>50</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>142</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>57</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>170</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>15</bucket>
            </map>
            <map to='#79706e'>
              <bucket>84</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>13</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>77</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>7</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>60</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>277</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>28</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>39</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>110</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>51</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>154</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>25</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>30</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>97</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>9</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>62</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>301</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>17</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>85</bucket>
            </map>
            <map to='#d37295'>
              <bucket>21</bucket>
            </map>
            <map to='#d37295'>
              <bucket>86</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>26</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>31</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>109</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>48</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>111</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>79</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>64</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>54</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>155</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>24</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>95</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>14</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>83</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>55</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>161</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:hospitaloverallrating:ok]' palette='red_gold_10_0' type='palette'>
            <map to='#499894'>
              <bucket>12</bucket>
            </map>
            <map to='#499894'>
              <bucket>67</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>50</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>142</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>57</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>170</bucket>
            </map>
            <map to='#79706e'>
              <bucket>15</bucket>
            </map>
            <map to='#79706e'>
              <bucket>84</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>13</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>77</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>7</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>60</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>277</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>28</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>39</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>110</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>51</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>154</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>25</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>30</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>97</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>9</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>62</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>301</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>17</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>85</bucket>
            </map>
            <map to='#cf4244'>
              <bucket>4</bucket>
            </map>
            <map to='#d37295'>
              <bucket>21</bucket>
            </map>
            <map to='#d37295'>
              <bucket>86</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>26</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>31</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>109</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>48</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>111</bucket>
            </map>
            <map to='#e15759'>
              <bucket>79</bucket>
            </map>
            <map to='#eb6e49'>
              <bucket>5</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>64</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>54</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>155</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f9aa51'>
              <bucket>1</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>24</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>95</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>14</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>83</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>55</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>161</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[avg:hospitaloverallrating:ok]' palette='red_gold_10_0' type='palette'>
            <map to='#499894'>
              <bucket>12.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>67.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>50.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>142.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>57.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>170.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>15.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>84.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>13.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>77.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>7.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>60.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>277.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>28.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>39.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>110.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>51.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>154.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>25.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>30.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>97.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>9.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>62.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>301.0</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>4.0588235294117645</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>4.5</bucket>
            </map>
            <map to='#b9213e'>
              <bucket>3.6666666666666665</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>17.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>85.0</bucket>
            </map>
            <map to='#bc253f'>
              <bucket>3.6636363636363636</bucket>
            </map>
            <map to='#bd273f'>
              <bucket>4.25</bucket>
            </map>
            <map to='#bf2a3f'>
              <bucket>3.518987341772152</bucket>
            </map>
            <map to='#c22e40'>
              <bucket>3.5090909090909093</bucket>
            </map>
            <map to='#c43141'>
              <bucket>4.0</bucket>
            </map>
            <map to='#c43241'>
              <bucket>3.5</bucket>
            </map>
            <map to='#c73641'>
              <bucket>3.4705882352941178</bucket>
            </map>
            <map to='#c93942'>
              <bucket>3.4615384615384617</bucket>
            </map>
            <map to='#ca3a42'>
              <bucket>3.75</bucket>
            </map>
            <map to='#cc3d43'>
              <bucket>3.4333333333333331</bucket>
            </map>
            <map to='#ce4143'>
              <bucket>3.4193548387096775</bucket>
            </map>
            <map to='#d14444'>
              <bucket>3.415492957746479</bucket>
            </map>
            <map to='#d34845'>
              <bucket>3.3880597014925371</bucket>
            </map>
            <map to='#d37295'>
              <bucket>21.0</bucket>
            </map>
            <map to='#d37295'>
              <bucket>86.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>26.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>31.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>109.0</bucket>
            </map>
            <map to='#d64b45'>
              <bucket>3.375</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>48.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>111.0</bucket>
            </map>
            <map to='#d84f46'>
              <bucket>3.3541666666666665</bucket>
            </map>
            <map to='#db5247'>
              <bucket>3.3076923076923075</bucket>
            </map>
            <map to='#dc5447'>
              <bucket>3.3333333333333335</bucket>
            </map>
            <map to='#dd5647'>
              <bucket>3.2996389891696749</bucket>
            </map>
            <map to='#df5947'>
              <bucket>3.2727272727272729</bucket>
            </map>
            <map to='#e15759'>
              <bucket>79.0</bucket>
            </map>
            <map to='#e15c48'>
              <bucket>3.25</bucket>
            </map>
            <map to='#e15d48'>
              <bucket>3.1754385964912282</bucket>
            </map>
            <map to='#e46048'>
              <bucket>3.1666666666666665</bucket>
            </map>
            <map to='#e66449'>
              <bucket>3.1443298969072164</bucket>
            </map>
            <map to='#e86749'>
              <bucket>3.1351351351351351</bucket>
            </map>
            <map to='#ea6b49'>
              <bucket>3.1333333333333333</bucket>
            </map>
            <map to='#eb6e49'>
              <bucket>5.0</bucket>
            </map>
            <map to='#ec6f49'>
              <bucket>3.1200000000000001</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>3.1176470588235294</bucket>
            </map>
            <map to='#ef764a'>
              <bucket>3.1055900621118013</bucket>
            </map>
            <map to='#f0774a'>
              <bucket>2.75</bucket>
            </map>
            <map to='#f1794a'>
              <bucket>3.0833333333333335</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>64.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>54.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>155.0</bucket>
            </map>
            <map to='#f37d4a'>
              <bucket>3.0465116279069768</bucket>
            </map>
            <map to='#f47f4a'>
              <bucket>2.6666666666666665</bucket>
            </map>
            <map to='#f4804a'>
              <bucket>3.037974683544304</bucket>
            </map>
            <map to='#f4c860'>
              <bucket>2.2903225806451615</bucket>
            </map>
            <map to='#f4cc63'>
              <bucket>2.0</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1.4285714285714286</bucket>
            </map>
            <map to='#f5c05a'>
              <bucket>2.53125</bucket>
            </map>
            <map to='#f5c45d'>
              <bucket>2.3199999999999998</bucket>
            </map>
            <map to='#f5c75f'>
              <bucket>1.0</bucket>
            </map>
            <map to='#f6844b'>
              <bucket>3.0324675324675323</bucket>
            </map>
            <map to='#f6b756'>
              <bucket>2.6785714285714284</bucket>
            </map>
            <map to='#f6bc58'>
              <bucket>1.3333333333333333</bucket>
            </map>
            <map to='#f6bc58'>
              <bucket>2.664705882352941</bucket>
            </map>
            <map to='#f7884b'>
              <bucket>3.0240963855421685</bucket>
            </map>
            <map to='#f7894b'>
              <bucket>2.5</bucket>
            </map>
            <map to='#f7b254'>
              <bucket>1.5</bucket>
            </map>
            <map to='#f7b354'>
              <bucket>2.693548387096774</bucket>
            </map>
            <map to='#f8aa51'>
              <bucket>2.7818181818181817</bucket>
            </map>
            <map to='#f8af53'>
              <bucket>2.7333333333333334</bucket>
            </map>
            <map to='#f98c4c'>
              <bucket>3.0129870129870131</bucket>
            </map>
            <map to='#f9a650'>
              <bucket>2.7948717948717947</bucket>
            </map>
            <map to='#f9a750'>
              <bucket>1.6666666666666667</bucket>
            </map>
            <map to='#fa914d'>
              <bucket>3.0</bucket>
            </map>
            <map to='#fa9d4f'>
              <bucket>2.8888888888888888</bucket>
            </map>
            <map to='#faa24f'>
              <bucket>2.8631578947368421</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>24.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>95.0</bucket>
            </map>
            <map to='#fb934d'>
              <bucket>2.3333333333333335</bucket>
            </map>
            <map to='#fb954d'>
              <bucket>2.9357798165137616</bucket>
            </map>
            <map to='#fb994e'>
              <bucket>2.8936877076411962</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>14.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>83.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>55.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>161.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:safetygrade:nk]' palette='green_gold_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>&quot;F&quot;</bucket>
            </map>
            <map to='#33834a'>
              <bucket>&quot;D&quot;</bucket>
            </map>
            <map to='#4b9c53'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#7cb257'>
              <bucket>&quot;B&quot;</bucket>
            </map>
            <map to='#b6c35c'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='providerid' />
        <field-sort-custom-order field='hospitalname' />
        <field-sort-custom-order field='address' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='zipcode' />
        <field-sort-custom-order field='hospitaloverallrating' />
        <field-sort-custom-order field='mortalitynationalcomparison' />
        <field-sort-custom-order field='safetyofcarenationalcomparison' />
        <field-sort-custom-order field='readmissionnationalcomparison' />
        <field-sort-custom-order field='patientexperiencenationalcomparison' />
        <field-sort-custom-order field='effectivenessofcarenationalcomparison' />
        <field-sort-custom-order field='timelinessofcarenationalcomparison' />
        <field-sort-custom-order field='efficientuseofmedicalimagingnationalcomparison' />
        <field-sort-custom-order field='averageeffectivecarescore' />
        <field-sort-custom-order field='averagereadmissionscore' />
        <field-sort-custom-order field='mortalitycomp' />
        <field-sort-custom-order field='safetyofcarecomp' />
        <field-sort-custom-order field='readmissioncomp' />
        <field-sort-custom-order field='patientexperiencecomp' />
        <field-sort-custom-order field='effectivenessofcarecomp' />
        <field-sort-custom-order field='timelinessofcarecomp' />
        <field-sort-custom-order field='efficientuseofmedicalimagingcomp' />
        <field-sort-custom-order field='safetygrade' />
        <field-sort-custom-order field='yelprating' />
        <field-sort-custom-order field='safetygradenumeric' />
        <field-sort-custom-order field='Calculation_872572449718501401' />
        <field-sort-custom-order field='Calculation_872572449719549979' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='3 Ratings by Geography'>
      <table>
        <view>
          <datasources>
            <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Hospitalname' datatype='string' name='[hospitalname]' role='dimension' type='nominal' />
            <column caption='Hospital Overall Rating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[hospitalname]' derivation='None' name='[none:hospitalname:nk]' pivot='key' type='nominal' />
            <column-instance column='[hospitaloverallrating]' derivation='None' name='[none:hospitaloverallrating:ok]' pivot='key' type='ordinal' />
            <column-instance column='[safetygrade]' derivation='None' name='[none:safetygrade:nk]' pivot='key' type='nominal' />
            <column-instance column='[yelprating]' derivation='None' name='[none:yelprating:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' caption='Safety Grade' datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[safetygrade]' role='dimension' type='nominal' />
            <column caption='Yelp Rating' datatype='real' datatype-customized='true' name='[yelprating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Longitude (generated)]' field-type='quantitative' max='-12855899.601508202' min='-13393421.676570507' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Latitude (generated)]' field-type='quantitative' max='4154132.6703087301' min='3842776.3597336211' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:safetygrade:nk]' />
              <size column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:yelprating:ok]' />
              <text column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitaloverallrating:ok]' />
              <text column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:city:nk]' />
              <lod column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitalname:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Latitude (generated)]</rows>
        <cols>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Average Hospital Score Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
            <column-instance column='[hospitaloverallrating]' derivation='Avg' name='[avg:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
            <column caption='Hospital Overall Rating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Longitude (generated)]' field-type='quantitative' max='32319688.461756248' min='25547142.467606265' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Latitude (generated)]' field-type='quantitative' max='7426539.3012261391' min='1873381.1503051082' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:hospitaloverallrating:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]' />
              <color column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:hospitaloverallrating:qk]' />
              <geometry column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Latitude (generated)]</rows>
        <cols>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='MetaScore Detail'>
      <table>
        <view>
          <datasources>
            <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
          </datasources>
          <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
            <column caption='Total Comparison' datatype='real' name='[Calculation_872572449718501401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([mortalitycomp],0)+&#13;&#10;IFNULL([safetyofcarecomp],0)+&#13;&#10;IFNULL([readmissioncomp],0)+&#13;&#10;IFNULL([patientexperiencecomp],0)+&#13;&#10;IFNULL([effectivenessofcarecomp],0)+&#13;&#10;IFNULL([efficientuseofmedicalimagingcomp],0)+&#13;&#10;IFNULL([timelinessofcarecomp],0 )+&#13;&#10;IFNULL([safetyofcarecomp],0)' />
            </column>
            <column caption='Meta Score' datatype='real' name='[Calculation_872572449719549979]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_872572449718501401] +&#13;&#10;IFNULL([yelprating],0) +&#13;&#10;IFNULl([safetygradenumeric],0) +&#13;&#10;IFNULL([hospitaloverallrating],0)' />
            </column>
            <column datatype='real' datatype-customized='true' name='[effectivenessofcarecomp]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[efficientuseofmedicalimagingcomp]' role='measure' type='quantitative' />
            <column caption='Hospitalname' datatype='string' name='[hospitalname]' role='dimension' type='nominal' />
            <column caption='Hospital Overall Rating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_872572449719549979]' derivation='Max' name='[max:Calculation_872572449719549979:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hospitaloverallrating]' derivation='Max' name='[max:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[mortalitycomp]' role='measure' type='quantitative' />
            <column-instance column='[hospitalname]' derivation='None' name='[none:hospitalname:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[patientexperiencecomp]' role='measure' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[readmissioncomp]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[safetygradenumeric]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[safetyofcarecomp]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_872572449718501401]' derivation='Sum' name='[sum:Calculation_872572449718501401:qk]' pivot='key' type='quantitative' />
            <column-instance column='[safetygradenumeric]' derivation='Sum' name='[sum:safetygradenumeric:qk]' pivot='key' type='quantitative' />
            <column-instance column='[yelprating]' derivation='Sum' name='[sum:yelprating:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[timelinessofcarecomp]' role='measure' type='quantitative' />
            <column caption='Yelp Rating' datatype='real' datatype-customized='true' name='[yelprating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:hospitaloverallrating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:yelprating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:safetygradenumeric:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449718501401:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449719549979:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:hospitaloverallrating:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:yelprating:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:safetygradenumeric:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449718501401:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449719549979:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitalname:nk]' direction='DESC' using='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449719549979:qk]' />
          <filter class='categorical' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;CA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]</column>
            <column>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]' value='128' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449719549979:qk]' />
              <text column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitalname:nk]</rows>
        <cols>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='MetaScore by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
            <column caption='Total Comparison' datatype='real' name='[Calculation_872572449718501401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([mortalitycomp],0)+&#13;&#10;IFNULL([safetyofcarecomp],0)+&#13;&#10;IFNULL([readmissioncomp],0)+&#13;&#10;IFNULL([patientexperiencecomp],0)+&#13;&#10;IFNULL([effectivenessofcarecomp],0)+&#13;&#10;IFNULL([efficientuseofmedicalimagingcomp],0)+&#13;&#10;IFNULL([timelinessofcarecomp],0 )+&#13;&#10;IFNULL([safetyofcarecomp],0)' />
            </column>
            <column caption='Meta Score' datatype='real' name='[Calculation_872572449719549979]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_872572449718501401] +&#13;&#10;IFNULL([yelprating],0) +&#13;&#10;IFNULl([safetygradenumeric],0) +&#13;&#10;IFNULL([hospitaloverallrating],0)' />
            </column>
            <column-instance column='[Calculation_872572449719549979]' derivation='Avg' name='[avg:Calculation_872572449719549979:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[effectivenessofcarecomp]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[efficientuseofmedicalimagingcomp]' role='measure' type='quantitative' />
            <column caption='Hospital Overall Rating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[mortalitycomp]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[patientexperiencecomp]' role='measure' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[readmissioncomp]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[safetygradenumeric]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[safetyofcarecomp]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[timelinessofcarecomp]' role='measure' type='quantitative' />
            <column caption='Yelp Rating' datatype='real' datatype-customized='true' name='[yelprating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Longitude (generated)]' field-type='quantitative' max='32622036.806375936' min='25915403.668616705' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Latitude (generated)]' field-type='quantitative' max='7280069.054422535' min='1726910.9035015036' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='3.0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:Calculation_872572449719549979:qk]' min='-0.2857142857142857' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]' />
              <color column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:Calculation_872572449719549979:qk]' />
              <geometry column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Latitude (generated)]</rows>
        <cols>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Scores Detail'>
      <table>
        <view>
          <datasources>
            <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
          </datasources>
          <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
            <column caption='IFNULL([Hospital Overall Rating],0)' datatype='integer' name='[Calculation_872572449717080074]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([hospitaloverallrating],0)' />
            </column>
            <column caption='IFNULL([safetygradenumeric],0)' datatype='integer' name='[Calculation_872572449717186571]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([safetygradenumeric],0)' />
            </column>
            <column caption='IFNULL([Yelp Rating],0)' datatype='real' name='[Calculation_872572449717301261]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([yelprating],0)' />
            </column>
            <column caption='IFNULL([timelinessofcarecomp],0)' datatype='real' name='[Calculation_872572449717657615]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([timelinessofcarecomp],0)' />
            </column>
            <column caption='IFNULL([safetyofcarecomp],0)' datatype='integer' name='[Calculation_872572449717719056]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([safetyofcarecomp],0)' />
            </column>
            <column caption='IFNULL([readmissioncomp],0)' datatype='real' name='[Calculation_872572449717772305]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([readmissioncomp],0)' />
            </column>
            <column caption='IFNULL([patientexperiencecomp],0)' datatype='real' name='[Calculation_872572449717841938]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([patientexperiencecomp],0)' />
            </column>
            <column caption='IFNULL([efficientuseofmedicalimagingcomp],0)' datatype='integer' name='[Calculation_872572449717895187]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([efficientuseofmedicalimagingcomp],0)' />
            </column>
            <column caption='IFNULL([effectivenessofcarecomp],0)' datatype='real' name='[Calculation_872572449717956628]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([effectivenessofcarecomp],0)' />
            </column>
            <column caption='IFNULL([Averagereadmissionscore],0)' datatype='real' name='[Calculation_872572449718001685]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([averagereadmissionscore],0)' />
            </column>
            <column caption='IFNULL([Averageeffectivecarescore],0)' datatype='real' name='[Calculation_872572449718059030]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='IFNULL([averageeffectivecarescore],0)' />
            </column>
            <column caption='Total Comparison' datatype='real' name='[Calculation_872572449718501401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([mortalitycomp],0)+&#13;&#10;IFNULL([safetyofcarecomp],0)+&#13;&#10;IFNULL([readmissioncomp],0)+&#13;&#10;IFNULL([patientexperiencecomp],0)+&#13;&#10;IFNULL([effectivenessofcarecomp],0)+&#13;&#10;IFNULL([efficientuseofmedicalimagingcomp],0)+&#13;&#10;IFNULL([timelinessofcarecomp],0 )+&#13;&#10;IFNULL([safetyofcarecomp],0)' />
            </column>
            <column caption='Meta Score' datatype='real' name='[Calculation_872572449719549979]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_872572449718501401] +&#13;&#10;IFNULL([yelprating],0) +&#13;&#10;IFNULl([safetygradenumeric],0) +&#13;&#10;IFNULL([hospitaloverallrating],0)' />
            </column>
            <column caption='Averageeffectivecarescore' datatype='real' datatype-customized='true' name='[averageeffectivecarescore]' role='measure' type='quantitative' />
            <column caption='Averagereadmissionscore' datatype='real' datatype-customized='true' name='[averagereadmissionscore]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[effectivenessofcarecomp]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[efficientuseofmedicalimagingcomp]' role='measure' type='quantitative' />
            <column caption='Hospitalname' datatype='string' name='[hospitalname]' role='dimension' type='nominal' />
            <column caption='Hospital Overall Rating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_872572449717186571]' derivation='Max' name='[max:Calculation_872572449717186571:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717301261]' derivation='Max' name='[max:Calculation_872572449717301261:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717657615]' derivation='Max' name='[max:Calculation_872572449717657615:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717719056]' derivation='Max' name='[max:Calculation_872572449717719056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717772305]' derivation='Max' name='[max:Calculation_872572449717772305:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717841938]' derivation='Max' name='[max:Calculation_872572449717841938:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717895187]' derivation='Max' name='[max:Calculation_872572449717895187:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449717956628]' derivation='Max' name='[max:Calculation_872572449717956628:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449718001685]' derivation='Max' name='[max:Calculation_872572449718001685:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449718059030]' derivation='Max' name='[max:Calculation_872572449718059030:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[mortalitycomp]' role='measure' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[hospitalname]' derivation='None' name='[none:hospitalname:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:nk]' pivot='key' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[patientexperiencecomp]' role='measure' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[readmissioncomp]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[safetygradenumeric]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[safetyofcarecomp]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_872572449717080074]' derivation='Sum' name='[sum:Calculation_872572449717080074:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449718501401]' derivation='Sum' name='[sum:Calculation_872572449718501401:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_872572449719549979]' derivation='Sum' name='[sum:Calculation_872572449719549979:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[timelinessofcarecomp]' role='measure' type='quantitative' />
            <column caption='Yelp Rating' datatype='real' datatype-customized='true' name='[yelprating]' role='measure' type='quantitative' />
            <column caption='Zipcode' datatype='string' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449717080074:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717186571:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717301261:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717657615:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717719056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717772305:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717841938:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717895187:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717956628:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449718001685:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449718059030:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449718501401:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449719549979:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449717080074:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717186571:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717301261:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717657615:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717719056:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717772305:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717841938:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717895187:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449717956628:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449718001685:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[max:Calculation_872572449718059030:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449718501401:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449719549979:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitalname:nk]' direction='ASC' using='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:Calculation_872572449719549979:qk]' />
          <filter class='categorical' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;CA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:zipcode:nk]'>
            <groupfilter function='level-members' level='[none:zipcode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]</column>
            <column>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]</column>
            <column>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:zipcode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk] / ([federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:city:nk] / [federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitalname:nk]))</rows>
        <cols>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Yelp Overall Correlation'>
      <table>
        <view>
          <datasources>
            <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
          </datasources>
          <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
            <column caption='Hospital Overall Rating' datatype='integer' datatype-customized='true' name='[hospitaloverallrating]' role='measure' type='quantitative' />
            <column-instance column='[hospitaloverallrating]' derivation='None' name='[none:hospitaloverallrating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[safetygrade]' derivation='None' name='[none:safetygrade:nk]' pivot='key' type='nominal' />
            <column-instance column='[yelprating]' derivation='None' name='[none:yelprating:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Safety Grade' datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[safetygrade]' role='dimension' type='nominal' />
            <column caption='Yelp Rating' datatype='real' datatype-customized='true' name='[yelprating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:yelprating:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:safetygrade:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:yelprating:qk]</rows>
        <cols>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitaloverallrating:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Details'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='master (medicare.master) (medicare)' name='federated.1a8xswp1gsr6e81c5mgej1d348zu' />
      </datasources>
      <datasource-dependencies datasource='federated.1a8xswp1gsr6e81c5mgej1d348zu'>
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='MetaScore Detail' w='84000' x='0' y='0' />
              <zone h='50000' id='7' name='MetaScore by State' w='42000' x='0' y='50000' />
              <zone h='50000' id='9' name='Average Hospital Score Map' w='42000' x='42000' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='81250' id='6' name='MetaScore Detail' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]' type='filter' w='16000' x='84000' y='0' />
              <zone h='9125' id='8' name='MetaScore by State' pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:Calculation_872572449719549979:qk]' type='color' w='16000' x='84000' y='81250' />
              <zone h='9625' id='10' name='Average Hospital Score Map' pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:hospitaloverallrating:qk]' type='color' w='16000' x='84000' y='90375' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Trends'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='8' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='100000' id='1' name='3 Ratings by Geography' w='51391' x='0' y='0'>
                  <layout-cache minheight='251' minwidth='202' type-h='scalable' type-w='scalable' />
                </zone>
                <zone h='100000' id='6' name='Yelp Overall Correlation' w='48316' x='51391' y='0'>
                  <layout-cache minheight='213' minwidth='164' type-h='scalable' type-w='scalable' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Desktop'>
          <size maxheight='1180' minheight='1180' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='100000' id='1' name='3 Ratings by Geography' w='100000' x='0' y='0' />
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='3 Ratings by Geography'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:yelprating:ok]' type='size' />
            <card pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:safetygrade:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:city:nk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitalname:nk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitaloverallrating:ok]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:safetygrade:nk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:yelprating:ok]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:zipcode:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Scores Detail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Average Hospital Score Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:hospitaloverallrating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[:Measure Names]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:hospitaloverallrating:qk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:Hospitaloverallrating (bin):qk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:city:nk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:yelprating:ok]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:zipcode:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Yelp Overall Correlation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:safetygrade:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[ctd:safetyofcarenationalcomparison:ok]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:Hospitaloverallrating (bin):qk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:hospitaloverallrating:ok]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:safetygrade:nk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:yelprating:ok]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[sum:yelprating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='MetaScore Detail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='MetaScore by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:Calculation_872572449719549979:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[avg:Calculation_872572449719549979:qk]</field>
            <field>[federated.1a8xswp1gsr6e81c5mgej1d348zu].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Trends'>
      <viewpoints>
        <viewpoint name='3 Ratings by Geography'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Yelp Overall Correlation'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Details'>
      <viewpoints>
        <viewpoint name='Average Hospital Score Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='MetaScore Detail' />
        <viewpoint name='MetaScore by State'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='3 Ratings by Geography' width='192'>
      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
      Hfr/J/XZnwWWB6gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Hospital Score Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Details' width='192'>
      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
      KOTGE+LSrAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MetaScore Detail' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MetaScore by State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Scores Detail' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trends' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Yelp Overall Correlation' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
